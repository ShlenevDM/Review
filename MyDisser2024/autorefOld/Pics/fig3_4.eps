%!PS-Adobe-3.0 EPSF-3.0
%%Creator: dvips(k) 5.90a Copyright 2002 Radical Eye Software
%%Title: pic.dvi
%%CreationDate: Thu May 26 18:18:28 2005
%%Pages: 1
%%PageOrder: Ascend
%%BoundingBox: 171 556 441 717
%%DocumentFonts: Courier
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: C:\texmf\miktex\bin\dvips.EXE pic.dvi
%DVIPSParameters: dpi=600, compressed
%DVIPSSource:  TeX output 2005.05.26:1818
%%BeginProcSet: texc.pro
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/id 0 N/rw 0 N/rc 0 N/gp 0 N/cp 0 N/G 0 N/CharBuilder{save 3
1 roll S A/base get 2 index get S/BitMaps get S get/Cd X pop/ctr 0 N Cdx
0 Cx Cy Ch sub Cx Cw add Cy setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx
sub Cy .1 sub]/id Ci N/rw Cw 7 add 8 idiv string N/rc 0 N/gp 0 N/cp 0 N{
rc 0 ne{rc 1 sub/rc X rw}{G}ifelse}imagemask restore}B/G{{id gp get/gp
gp 1 add N A 18 mod S 18 idiv pl S get exec}loop}B/adv{cp add/cp X}B
/chg{rw cp id gp 4 index getinterval putinterval A gp add/gp X adv}B/nd{
/cp 0 N rw exit}B/lsh{rw cp 2 copy get A 0 eq{pop 1}{A 255 eq{pop 254}{
A A add 255 and S 1 and or}ifelse}ifelse put 1 adv}B/rsh{rw cp 2 copy
get A 0 eq{pop 128}{A 255 eq{pop 127}{A 2 idiv S 128 and or}ifelse}
ifelse put 1 adv}B/clr{rw cp 2 index string putinterval adv}B/set{rw cp
fillstr 0 4 index getinterval putinterval adv}B/fillstr 18 string 0 1 17
{2 copy 255 put pop}for N/pl[{adv 1 chg}{adv 1 chg nd}{1 add chg}{1 add
chg nd}{adv lsh}{adv lsh nd}{adv rsh}{adv rsh nd}{1 add adv}{/rc X nd}{
1 add set}{1 add clr}{adv 2 chg}{adv 2 chg nd}{pop nd}]A{bind pop}
forall N/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: 8r.enc
% @@psencodingfile@{
%   author = "S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry",
%   version = "0.6",
%   date = "1 July 1998",
%   filename = "8r.enc",
%   email = "tex-fonts@@tug.org",
%   docstring = "Encoding for TrueType or Type 1 fonts
%                to be used with TeX."
% @}
% 
% Idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard Encoding + ISO Latin 1 + extra characters from Lucida.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% 
% (4) Remaining positions left undefined are for use in (hopefully)
% upward-compatible revisions, if someday more characters are generally
% available.
% 
% (5) hyphen appears twice for compatibility with both 
% ASCII and Windows.
% 
/TeXBase1Encoding [
% 0x00 (encoded characters from Adobe Standard not in Windows 3.1)
  /.notdef /dotaccent /fi /fl
  /fraction /hungarumlaut /Lslash /lslash
  /ogonek /ring /.notdef
  /breve /minus /.notdef 
% These are the only two remaining unencoded characters, so may as
% well include them.
  /Zcaron /zcaron 
% 0x10
 /caron /dotlessi 
% (unusual TeX characters available in, e.g., Lucida Bright)
 /dotlessj /ff /ffi /ffl 
 /.notdef /.notdef /.notdef /.notdef
 /.notdef /.notdef /.notdef /.notdef
 % very contentious; it's so painful not having quoteleft and quoteright
 % at 96 and 145 that we move the things normally found there to here.
 /grave /quotesingle 
% 0x20 (ASCII begins)
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three /four /five /six /seven
 /eight /nine /colon /semicolon /less /equal /greater /question
% 0x40
 /at /A /B /C /D /E /F /G /H /I /J /K /L /M /N /O
% 0x50
 /P /Q /R /S /T /U /V /W
 /X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c /d /e /f /g /h /i /j /k /l /m /n /o
% 0x70
 /p /q /r /s /t /u /v /w
 /x /y /z /braceleft /bar /braceright /asciitilde
 /.notdef % rubout; ASCII ends
% 0x80
 /.notdef /.notdef /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /.notdef /.notdef /.notdef
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /.notdef /.notdef /Ydieresis
% 0xA0
 /.notdef % nobreakspace
 /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot
 /hyphen % Y&Y (also at 45); Windows' softhyphen
 /registered
 /macron
% 0xD0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def

%%EndProcSet
%%BeginProcSet: special.pro
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/copypage{}N/p 3 def @MacSetUp}N/doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N/endTexFig{end psf$SavedState restore}N/@beginspecial{SDict
begin/SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count/ocount X/dcount countdictstack N}N/@setspecial{
CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if/showpage{}N/erasepage{}N/copypage{}N newpath}N
/@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{end}
repeat grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
TeXDict begin 39158280 55380996 1000 600 600 (pic.dvi)
@start end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%PaperSize: A4
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 822 1782 a @beginspecial 174 @llx
558 @lly 443 @urx 718 @ury 2690 @rwi @clip @setspecial
%%BeginDocument: fig5.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: dvips(k) 5.86 Copyright 1999 Radical Eye Software
%%Title: pic41.dvi
%%CreationDate: Sat Apr 30 22:26:58 2005
%%Pages: 1
%%PageOrder: Ascend
%%BoundingBox: 174 558 443 718
%%DocumentFonts: Courier
%%DocumentPaperSizes: a4
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips pic41.dvi
%DVIPSParameters: dpi=600, compressed
%DVIPSSource:  TeX output 2005.04.30:2226
%%BeginProcSet: texc.pro
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/id 0 N/rw 0 N/rc 0 N/gp 0 N/cp 0 N/G 0 N/CharBuilder{save 3
1 roll S A/base get 2 index get S/BitMaps get S get/Cd X pop/ctr 0 N Cdx
0 Cx Cy Ch sub Cx Cw add Cy setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx
sub Cy .1 sub]/id Ci N/rw Cw 7 add 8 idiv string N/rc 0 N/gp 0 N/cp 0 N{
rc 0 ne{rc 1 sub/rc X rw}{G}ifelse}imagemask restore}B/G{{id gp get/gp
gp 1 add N A 18 mod S 18 idiv pl S get exec}loop}B/adv{cp add/cp X}B
/chg{rw cp id gp 4 index getinterval putinterval A gp add/gp X adv}B/nd{
/cp 0 N rw exit}B/lsh{rw cp 2 copy get A 0 eq{pop 1}{A 255 eq{pop 254}{
A A add 255 and S 1 and or}ifelse}ifelse put 1 adv}B/rsh{rw cp 2 copy
get A 0 eq{pop 128}{A 255 eq{pop 127}{A 2 idiv S 128 and or}ifelse}
ifelse put 1 adv}B/clr{rw cp 2 index string putinterval adv}B/set{rw cp
fillstr 0 4 index getinterval putinterval adv}B/fillstr 18 string 0 1 17
{2 copy 255 put pop}for N/pl[{adv 1 chg}{adv 1 chg nd}{1 add chg}{1 add
chg nd}{adv lsh}{adv lsh nd}{adv rsh}{adv rsh nd}{1 add adv}{/rc X nd}{
1 add set}{1 add clr}{adv 2 chg}{adv 2 chg nd}{pop nd}]A{bind pop}
forall N/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: psfrag.pro
%%
%% This is file `psfrag.pro',
%% generated with the docstrip utility.
%%
%% The original source files were:
%%
%% psfrag.dtx  (with options: `filepro')
%% 
%% Copyright (c) 1996 Craig Barratt, Michael C. Grant, and David Carlisle.
%% All rights reserved.
%% 
%% This file is part of the PSfrag package.
%% 
userdict begin
/PSfragLib 90 dict def
/PSfragDict 6 dict def
/PSfrag { PSfragLib begin load exec end } bind def
end
PSfragLib begin
/RO /readonly      load def
/CP /currentpoint  load def
/CM /currentmatrix load def
/B { bind RO def } bind def
/X { exch def } B
/MD { { X } forall } B
/OE { end exec PSfragLib begin } B
/S false def
/tstr 8 string def
/islev2 { languagelevel } stopped { false } { 2 ge } ifelse def
[ /sM /tM /srcM /dstM /dM /idM /srcFM /dstFM ] { matrix def } forall
sM currentmatrix RO pop
dM defaultmatrix RO idM invertmatrix RO pop
srcFM identmatrix pop
/Hide { gsave { CP } stopped not newpath clip { moveto } if } B
/Unhide { { CP } stopped not grestore { moveto } if } B
/setrepl islev2 {{ /glob currentglobal def true setglobal array astore
                   globaldict exch /PSfrags exch put glob setglobal }}
                {{ array astore /PSfrags X }} ifelse B
/getrepl islev2 {{ globaldict /PSfrags get aload length }}
                {{ PSfrags aload length }} ifelse B
/convert {
   /src X src length string
   /c 0 def src length {
      dup c src c get dup 32 lt { pop 32 } if put /c c 1 add def
   } repeat
} B
/Begin {
    /saver save def
    srcFM exch 3 exch put
    0 ne /debugMode X 0 setrepl
    dup /S exch dict def { S 3 1 roll exch convert exch put } repeat
    srcM CM dup invertmatrix pop
    mark { currentdict { end } stopped { pop exit } if } loop
    PSfragDict counttomark { begin } repeat pop
} B
/End {
    mark { currentdict end dup PSfragDict eq { pop exit } if } loop
    counttomark { begin } repeat pop
    getrepl saver restore
    7 idiv dup /S exch dict def {
        6 array astore /mtrx X tstr cvs /K X
        S K [ S K known { S K get aload pop } if mtrx ] put
    } repeat
} B
/Place {
    tstr cvs /K X
    S K known {
        bind /proc X tM CM pop
        CP /cY X /cX X
        0 0 transform idtransform neg /aY X neg /aX X
        S K get dup length /maxiter X
        /iter 1 def {
            iter maxiter ne { /saver save def } if
            tM setmatrix aX aY translate
            [ exch aload pop idtransform ] concat
            cX neg cY neg translate cX cY moveto
            /proc load OE
            iter maxiter ne { saver restore /iter iter 1 add def } if
        } forall
        /noXY { CP /cY X /cX X } stopped def
        tM setmatrix noXY { newpath } { cX cY moveto } ifelse
    } {
        Hide OE Unhide
    } ifelse
} B
/normalize {
    2 index dup mul 2 index dup mul add sqrt div
    dup 4 -1 roll exch mul 3 1 roll mul
} B
/replace {
    aload pop MD
    CP /bY X /lX X gsave sM setmatrix
    str stringwidth abs exch abs add dup 0 eq
        { pop } { 360 exch div dup scale } ifelse
    lX neg bY neg translate newpath lX bY moveto
    str { /ch X ( ) dup 0 ch put false charpath ch Kproc } forall
    flattenpath pathbbox [ /uY /uX /lY /lX ] MD
    CP grestore moveto
    currentfont /FontMatrix get dstFM copy dup
    0 get 0 lt { uX lX /uX X /lX X } if
    3 get 0 lt { uY lY /uY X /lY X } if
    /cX uX lX add 0.5 mul def
    /cY uY lY add 0.5 mul def
    debugMode { gsave 0 setgray 1 setlinewidth
        lX lY moveto lX uY lineto uX uY lineto uX lY lineto closepath
        lX bY moveto uX bY lineto lX cY moveto uX cY lineto
        cX lY moveto cX uY lineto stroke
    grestore } if
    dstFM dup invertmatrix dstM CM srcM
    2 { dstM concatmatrix } repeat pop
    getrepl /temp X
        S str convert get {
            aload pop [ /rot /scl /loc /K ] MD
            /aX cX def /aY cY def
            loc {
                dup 66  eq { /aY bY def } { % B
                dup 98  eq { /aY lY def } { % b
                dup 108 eq { /aX lX def } { % l
                dup 114 eq { /aX uX def } { % r
                dup 116 eq { /aY uY def }   % t
                if } ifelse } ifelse } ifelse } ifelse pop
            } forall
            K srcFM rot tM rotate dstM
            2 { tM concatmatrix } repeat aload pop pop pop
            2 { scl normalize 4 2 roll } repeat
            aX aY transform
            /temp temp 7 add def
        } forall
    temp setrepl
} B
/Rif {
    S 3 index convert known { pop replace } { exch pop OE } ifelse
} B
/XA { bind [ /Kproc /str } B /XC { ] 2 array astore def } B
/xs   { pop } XA XC
/xks  { /kern load OE } XA /kern XC
/xas  { pop ax ay rmoveto } XA /ay /ax XC
/xws  { c eq { cx cy rmoveto } if } XA /c /cy /cx XC
/xaws { ax ay rmoveto c eq { cx cy rmoveto } if }
    XA /ay /ax /c /cy /cx XC
/raws { xaws { awidthshow } Rif } B
/rws  { xws { widthshow } Rif } B
/rks  { xks { kshow } Rif } B
/ras  { xas { ashow } Rif } B
/rs   { xs { show } Rif } B
/rrs { getrepl dup 2 add -1 roll //restore exec setrepl } B
PSfragDict begin
islev2 not { /restore { /rrs PSfrag } B } if
/show       { /rs   PSfrag } B
/kshow      { /rks  PSfrag } B
/ashow      { /ras  PSfrag } B
/widthshow  { /rws  PSfrag } B
/awidthshow { /raws PSfrag } B
end PSfragDict RO pop
end

%%EndProcSet
%%BeginProcSet: 8r.enc
% @@psencodingfile@{
%   author = "S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry",
%   version = "0.6",
%   date = "1 July 1998",
%   filename = "8r.enc",
%   email = "tex-fonts@@tug.org",
%   docstring = "Encoding for TrueType or Type 1 fonts
%                to be used with TeX."
% @}
% 
% Idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard Encoding + ISO Latin 1 + extra characters from Lucida.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% 
% (4) Remaining positions left undefined are for use in (hopefully)
% upward-compatible revisions, if someday more characters are generally
% available.
% 
% (5) hyphen appears twice for compatibility with both 
% ASCII and Windows.
% 
/TeXBase1Encoding [
% 0x00 (encoded characters from Adobe Standard not in Windows 3.1)
  /.notdef /dotaccent /fi /fl
  /fraction /hungarumlaut /Lslash /lslash
  /ogonek /ring /.notdef
  /breve /minus /.notdef 
% These are the only two remaining unencoded characters, so may as
% well include them.
  /Zcaron /zcaron 
% 0x10
 /caron /dotlessi 
% (unusual TeX characters available in, e.g., Lucida Bright)
 /dotlessj /ff /ffi /ffl 
 /.notdef /.notdef /.notdef /.notdef
 /.notdef /.notdef /.notdef /.notdef
 % very contentious; it's so painful not having quoteleft and quoteright
 % at 96 and 145 that we move the things normally found there to here.
 /grave /quotesingle 
% 0x20 (ASCII begins)
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three /four /five /six /seven
 /eight /nine /colon /semicolon /less /equal /greater /question
% 0x40
 /at /A /B /C /D /E /F /G /H /I /J /K /L /M /N /O
% 0x50
 /P /Q /R /S /T /U /V /W
 /X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c /d /e /f /g /h /i /j /k /l /m /n /o
% 0x70
 /p /q /r /s /t /u /v /w
 /x /y /z /braceleft /bar /braceright /asciitilde
 /.notdef % rubout; ASCII ends
% 0x80
 /.notdef /.notdef /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /.notdef /.notdef /.notdef
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /.notdef /.notdef /Ydieresis
% 0xA0
 /.notdef % nobreakspace
 /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot
 /hyphen % Y&Y (also at 45); Windows' softhyphen
 /registered
 /macron
% 0xD0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def

%%EndProcSet
%%BeginProcSet: special.pro
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/copypage{}N/p 3 def @MacSetUp}N/doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N/endTexFig{end psf$SavedState restore}N/@beginspecial{SDict
begin/SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count/ocount X/dcount countdictstack N}N/@setspecial{
CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if/showpage{}N/erasepage{}N/copypage{}N newpath}N
/@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{end}
repeat grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
TeXDict begin 39158280 55380996 1000 600 600 (pic41.dvi)
@start
%DVIPSBitmapFont: Fa cmsy10 10 1
/Fa 1 3 df<0060150600F8150F6C151F007E153F6C157E6C6C14FC6C6CEB01F86C6CEB
03F06C6CEB07E06C6CEB0FC06C6CEB1F80017EEB3F006D137E6D6C5A90380FC1F8903807
E3F0903803F7E06DB45A6D5B6EC7FCA24A7E497F903803F7E0903807E3F090380FC1F890
381F80FC90383F007E017E7F49EB1F804848EB0FC04848EB07E04848EB03F04848EB01F8
4848EB00FC48C8127E007E153F48151F48150F00601506282874A841>2
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fb cmr5 5 1
/Fb 1 49 df<EA01FCEA07FF380F0780381C01C0383800E0A2007813F000701370A200F0
1378AB00701370A2007813F0003813E0A2381C01C0380F07803807FF00EA01FC151D7D9B
1C>48 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fc cmmi7 7 3
/Fc 3 110 df<16E0000214010006EC03F0120E000C1401481400A24815701660481330
147014F04815C0A2495AED018014C0ED03005DD8E003130E0107131E39F01FE07CB65AD8
7FFC5B6C485B391FE07FC0260F803FC7FC241B7E992A>33 D<B590B5EB3FFCA2D80FE0D9
0FE0EB07E0F003C019800007EF070003071406030F5CA2031F5CA203375C03775C6D1367
DBC7F05B1203DA0183495A02034AC7FC150302061406A2020C5C021C5CEBF81800010130
6D5A030113700260146002E05C14C0D9F980EBF98016FBD9FB0091C8FC01FE14FEA26C48
5C1500495C495CA2495C5E3E297BA73E>87 D<3B07801FC007E03B0FE07FF01FF83B18F0
E0F8783C3B30F1807CE03E903AFB007D801ED860FEEB3F005B49133E00C14A133E5B1201
A24848495BA35F4848485A1830EE01F0A23C0F8003E003E060A218C0933801E180271F00
07C013E3933800FF00000E6D48137C341B7D993B>109 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fd cmr7 7 11
/Fd 11 58 df<1238127C12FEA3127C123807077B8613>46 D<EB3F803801FFF03803E0
F83807803C48487E001E7F003E1480A2003C1307007C14C0A400FC14E0AE007C14C0A36C
EB0F80A36CEB1F006C131E6C6C5A3803E0F86CB45A38003F801B277EA521>48
D<13381378EA01F8121F12FE12E01200B3AB487EB512F8A215267BA521>I<13FF000313
E0380E03F0381800F848137C48137E00787F12FC6CEB1F80A4127CC7FC15005C143E147E
147C5C495A495A5C495A010EC7FC5B5B903870018013E0EA0180390300030012065A001F
B5FC5A485BB5FCA219267DA521>I<13FF000313E0380F01F8381C007C0030137E003C13
3E007E133FA4123CC7123E147E147C5C495AEB07E03801FF8091C7FC380001E06D7E147C
80143F801580A21238127C12FEA21500485B0078133E00705B6C5B381F01F03807FFC0C6
90C7FC19277DA521>I<1438A2147814F81301A2130313071306130C131C131813301370
136013C012011380EA03005A120E120C121C5A12305A12E0B612E0A2C7EAF800A7497E90
383FFFE0A21B277EA621>I<0018130C001F137CEBFFF85C5C1480D819FCC7FC0018C8FC
A7137F3819FFE0381F81F0381E0078001C7F0018133EC7FC80A21580A21230127C12FCA3
150012F00060133E127000305B001C5B380F03E03803FFC0C648C7FC19277DA521>I<EB
0FE0EB3FF8EBF81C3801E0063803C01F48485AEA0F005A121E003E131E91C7FC5AA21304
EB3FC038FCFFF038FDC078B4C67E143E48131E141FA2481480A4127CA4003C1400123E00
1E131E143E6C133C6C6C5A3803C1F03801FFC06C6CC7FC19277DA521>I<1230123C003F
B512E0A215C0481480A239700007000060130E140C48131C5C5CC75A5C1301495AA249C7
FC5B130E131EA3133E133CA2137CA413FCA813781B287DA621>I<137F3803FFE0380781
F8380E007C48131E5A801278A3127C007E131EEA3F80EBE03C6C6C5A380FFCF03807FFC0
6C5BC613E0487F38079FFC380F07FEEA1E0348C67E48133FEC1F8048130FA21407A31500
1278140E6C5B6C5B380F80F03803FFE0C66CC7FC19277DA521>I<137F3801FFC03807C1
E0380F0070001E1378003E7F003C133E007C131EA200FC131FA41580A4007C133FA2123C
003E137F121E380F01DF3807FF9F3801FE1FD8001013001300A2143E123C007E133CA25C
5C007C5B383003C0381C0780D80FFFC7FCEA03F819277DA521>I
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fe cmr10 10 16
/Fe 16 117 df<EB03F8EB1FFF90387E0FC09038F803E03901E000F0484813780007147C
48487FA248C77EA2481580A3007EEC0FC0A600FE15E0B3007E15C0A4007F141F6C1580A3
6C15006D5B000F143EA26C6C5B6C6C5B6C6C485A6C6C485A90387E0FC0D91FFFC7FCEB03
F8233A7DB72A>48 D<EB01C013031307131F13FFB5FCA2131F1200B3B3A8497E007FB512
F0A31C3879B72A>I<B712C016F816FE000190398001FF806C90C7EA3FC0EE0FE0EE07F0
EE03F817FC17FE1601A217FFA717FEA2EE03FCA2EE07F817F0EE0FE0EE3FC0923801FF00
91B512FC16F091C9FCB3A5487FB6FCA330397DB839>80 D<D90FF813C090383FFE0190B5
12813903F807E33907E000F74848137F4848133F48C7121F003E140F007E1407A2007C14
0312FC1501A36C1400A37E6D14006C7E7F13F86CB47E6C13F8ECFF806C14E06C14F86C14
FEC680013F1480010714C0EB007F020713E0EC007FED3FF0151F150FED07F8A200C01403
A21501A37EA216F07E15036C15E06C14076C15C06C140F6DEB1F80D8FBF0EB3F00D8F0FE
13FE39E03FFFF8010F13E0D8C00190C7FC253D7CBA2E>83 D<EB1FE0EBFFFC3803E03F39
07000F80390F8007E0486C6C7E13E06E7EA26E7E6C5A6C5AC8FCA4147FEB07FFEB3FE0EB
FE00EA03F8EA0FF0EA1FC0123F485A90C7FC160C12FEA31401A26C13036CEB077C903980
063E18383FC01E3A0FE0781FF03A03FFF00FE03A007F8007C026277DA52A>97
D<EB03FC90381FFF8090387E03E03901F80070484813F83907E001FC380FC003A2EA1F80
123F90380001F848EB00F01500A2127E12FEAA127E127FA26C14067F001F140E6D130C00
0F141C6C6C13386C6C13706C6C13E039007C07C090381FFF00EB07F81F277DA525>99
D<EB07F8EB1FFF90387C0FC03901F803E03903F001F0D807E013F8380FC0004848137CA2
48C7127E153E5A153F127E12FEA3B7FCA248C8FCA5127EA2127FA26C14037F001F14076C
6C13060007140E6D131CD801F013386C6C137090387E03E090381FFF80903803FC002027
7EA525>101 D<147E903803FF8090380FC1E0EB1F8790383F0FF0137EA213FCA23901F8
03C091C7FCADB512FCA3D801F8C7FCB3AB487E387FFFF8A31C3B7FBA19>I<ED03F09039
0FF00FF890393FFC3C3C9039F81F707C3901F00FE03903E007C03A07C003E010000FECF0
00A248486C7EA86C6C485AA200075C6C6C485A6D485A6D48C7FC38073FFC38060FF0000E
C9FCA4120FA213C06CB512C015F86C14FE6CECFF804815C03A0F80007FE048C7EA0FF000
3E140348140116F8481400A56C1401007C15F06CEC03E0003F1407D80F80EB0F80D807E0
EB3F003901FC01FC39007FFFF0010790C7FC26387EA52A>I<EA03F012FFA3120F1203B3
B3AD487EB512C0A3123A7EB917>108 D<2703F00FF0EB1FE000FFD93FFCEB7FF8913AF0
3F01E07E903BF1C01F83803F3D0FF3800FC7001F802603F70013CE01FE14DC49D907F8EB
0FC0A2495CA3495CB3A3486C496CEB1FE0B500C1B50083B5FCA340257EA445>I<3903F0
0FF000FFEB3FFCECF03F9039F1C01F803A0FF3800FC03803F70013FE496D7EA25BA35BB3
A3486C497EB500C1B51280A329257EA42E>I<3903F01FE000FFEB7FF89038F1E07E9039
F3801F803A07F7000FC0D803FEEB07E049EB03F04914F849130116FC150016FEA3167FAA
16FEA3ED01FCA26DEB03F816F06D13076DEB0FE001F614C09039F7803F009038F1E07E90
38F0FFF8EC1FC091C8FCAB487EB512C0A328357EA42E>112 D<3807E01F00FFEB7FC090
38E1E3E09038E387F0380FE707EA03E613EE9038EC03E09038FC0080491300A45BB3A248
7EB512F0A31C257EA421>114 D<EBFF03000313E7380F80FF381E003F487F487F00707F
12F0A2807EA27EB490C7FCEA7FE013FF6C13E06C13F86C7F00037FC67F01071380EB007F
141F00C0EB0FC01407A26C1303A37E15806C13077EEC0F00B4131E38F3C07C38E1FFF038
C03F801A277DA521>I<1318A51338A31378A313F8120112031207001FB5FCB6FCA2D801
F8C7FCB215C0A93800FC011580EB7C03017E13006D5AEB0FFEEB01F81A347FB220>I
E
%EndDVIPSBitmapFont
end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%BeginPaperSize: a4
a4
%%EndPaperSize

%%EndSetup
%%Page: 1 1
1 0 bop 747 1757 a
 /PSfrag where{pop(1)[[0(Bl)1 0]](2)[[1(Bl)1 0]](3)[[2(Bl)1 0]](4)[[3(Bl)1
0]](0.55)[[4(Bl)1 0]](0.6)[[5(Bl)1 0]](0.65)[[6(Bl)1 0]](0.7)[[7(Bl)1
0]](0.75)[[8(Bl)1 0]](0.8)[[9(Bl)1 0]](0.85)[[10(Bl)1 0]](0.9)[[11(Bl)1
0]](qlqqqqqq)[[12(Bl)1 0]](qp)[[13(Bl)1 0]]14 0 -1/Begin PSfrag}{userdict
/PSfrag{pop}put}ifelse
 747 1757 a @beginspecial 0 @llx 65
@lly 288 @urx 223 @ury 2880 @rwi @setspecial
%%BeginDocument: W122100.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Mathematica-PSRender
%%BoundingBox: 0 65 288 223 
%%Pages: (atend)
%%DocumentNeededResources: (atend)
%%EndComments
%%BeginProlog
/setrgbcolor dup where
{ pop pop }
{ { .114 mul exch .587 mul add exch .299 mul add setgray } bind def }
ifelse
/C /curveto load def
/f /fill load def
/F { closepath fill } bind def
/L /lineto load def
/S /stroke load def
/s { closepath stroke } bind def
/d /setdash load def
/g /setgray load def
/m /moveto load def
/r /setrgbcolor load def
/w /setlinewidth load def
/b { gsave gsave F grestore 0 g S grestore newpath } bind def
/dot { newpath 0 360 arc fill } bind def
%%EndProlog
%%Page: 1 1 
0 g
0.25 w
1 setlinecap
1 setlinejoin
10. setmiterlimit
[ ] 0 d
69.0492 89.5245 m
69.0492 90.8742 L
S
57.1117 80.8877 m
%%IncludeResource: font Courier
/F0 /Courier findfont def
F0 10. scalefont setfont
(0.55) show
99.0423 89.5245 m
99.0423 90.8742 L
S
90.1048 80.8877 m
(0.6) show
129.035 89.5245 m
129.035 90.8742 L
S
117.098 80.8877 m
(0.65) show
159.026 89.5245 m
159.026 90.8742 L
S
150.089 80.8877 m
(0.7) show
189.02 89.5245 m
189.02 90.8742 L
S
177.082 80.8877 m
(0.75) show
219.013 89.5245 m
219.013 90.8742 L
S
210.075 80.8877 m
(0.8) show
249.006 89.5245 m
249.006 90.8742 L
S
237.068 80.8877 m
(0.85) show
278.999 89.5245 m
278.999 90.8742 L
S
270.061 80.8877 m
(0.9) show
0.125 w
75.0483 89.5245 m
75.0483 90.3343 L
S
81.0452 89.5245 m
81.0452 90.3343 L
S
87.0442 89.5245 m
87.0442 90.3343 L
S
93.0433 89.5245 m
93.0433 90.3343 L
S
105.039 89.5245 m
105.039 90.3343 L
S
111.038 89.5245 m
111.038 90.3343 L
S
117.037 89.5245 m
117.037 90.3343 L
S
123.036 89.5245 m
123.036 90.3343 L
S
135.032 89.5245 m
135.032 90.3343 L
S
141.031 89.5245 m
141.031 90.3343 L
S
147.03 89.5245 m
147.03 90.3343 L
S
153.03 89.5245 m
153.03 90.3343 L
S
165.025 89.5245 m
165.025 90.3343 L
S
171.025 89.5245 m
171.025 90.3343 L
S
177.024 89.5245 m
177.024 90.3343 L
S
183.023 89.5245 m
183.023 90.3343 L
S
195.019 89.5245 m
195.019 90.3343 L
S
201.018 89.5245 m
201.018 90.3343 L
S
207.017 89.5245 m
207.017 90.3343 L
S
213.014 89.5245 m
213.014 90.3343 L
S
225.012 89.5245 m
225.012 90.3343 L
S
231.011 89.5245 m
231.011 90.3343 L
S
237.01 89.5245 m
237.01 90.3343 L
S
243.007 89.5245 m
243.007 90.3343 L
S
255.005 89.5245 m
255.005 90.3343 L
S
261.004 89.5245 m
261.004 90.3343 L
S
267.001 89.5245 m
267.001 90.3343 L
S
273. 89.5245 m
273. 90.3343 L
S
0.25 w
63.0501 89.5245 m
278.999 89.5245 L
S
164.9 68.7002 m
(qp) show
63.0501 119.138 m
64.3998 119.138 L
S
55.1008 116.138 m
(1) show
63.0501 148.809 m
64.3998 148.809 L
S
55.5383 145.809 m
(2) show
63.0501 178.48 m
64.3998 178.48 L
S
55.5383 175.48 m
(3) show
63.0501 208.152 m
64.3998 208.152 L
S
55.9133 205.152 m
(4) show
0.125 w
63.0501 95.4005 m
63.8599 95.4005 L
S
63.0501 101.335 m
63.8599 101.335 L
S
63.0501 107.269 m
63.8599 107.269 L
S
63.0501 113.203 m
63.8599 113.203 L
S
63.0501 125.072 m
63.8599 125.072 L
S
63.0501 131.006 m
63.8599 131.006 L
S
63.0501 136.94 m
63.8599 136.94 L
S
63.0501 142.875 m
63.8599 142.875 L
S
63.0501 154.743 m
63.8599 154.743 L
S
63.0501 160.677 m
63.8599 160.677 L
S
63.0501 166.612 m
63.8599 166.612 L
S
63.0501 172.546 m
63.8599 172.546 L
S
63.0501 184.415 m
63.8599 184.415 L
S
63.0501 190.349 m
63.8599 190.349 L
S
63.0501 196.283 m
63.8599 196.283 L
S
63.0501 202.217 m
63.8599 202.217 L
S
63.0501 214.086 m
63.8599 214.086 L
S
63.0501 220.02 m
63.8599 220.02 L
S
0.25 w
63.0501 89.5245 m
63.0501 222.987 L
S
2.0011 153.538 m
(qlqqqqqq) show
69.0492 221.638 m
69.0492 222.987 L
S
99.0423 221.638 m
99.0423 222.987 L
S
129.035 221.638 m
129.035 222.987 L
S
159.026 221.638 m
159.026 222.987 L
S
189.02 221.638 m
189.02 222.987 L
S
219.013 221.638 m
219.013 222.987 L
S
249.006 221.638 m
249.006 222.987 L
S
0.125 w
75.0483 222.178 m
75.0483 222.987 L
S
81.0452 222.178 m
81.0452 222.987 L
S
87.0442 222.178 m
87.0442 222.987 L
S
93.0433 222.178 m
93.0433 222.987 L
S
105.039 222.178 m
105.039 222.987 L
S
111.038 222.178 m
111.038 222.987 L
S
117.037 222.178 m
117.037 222.987 L
S
123.036 222.178 m
123.036 222.987 L
S
135.032 222.178 m
135.032 222.987 L
S
141.031 222.178 m
141.031 222.987 L
S
147.03 222.178 m
147.03 222.987 L
S
153.03 222.178 m
153.03 222.987 L
S
165.025 222.178 m
165.025 222.987 L
S
171.025 222.178 m
171.025 222.987 L
S
177.024 222.178 m
177.024 222.987 L
S
183.023 222.178 m
183.023 222.987 L
S
195.019 222.178 m
195.019 222.987 L
S
201.018 222.178 m
201.018 222.987 L
S
207.017 222.178 m
207.017 222.987 L
S
213.014 222.178 m
213.014 222.987 L
S
225.012 222.178 m
225.012 222.987 L
S
231.011 222.178 m
231.011 222.987 L
S
237.01 222.178 m
237.01 222.987 L
S
243.007 222.178 m
243.007 222.987 L
S
255.005 222.178 m
255.005 222.987 L
S
261.004 222.178 m
261.004 222.987 L
S
267.001 222.178 m
267.001 222.987 L
S
273. 222.178 m
273. 222.987 L
S
0.25 w
63.0501 222.987 m
278.999 222.987 L
S
277.649 119.138 m
278.999 119.138 L
S
277.649 148.809 m
278.999 148.809 L
S
277.649 178.48 m
278.999 178.48 L
S
277.649 208.152 m
278.999 208.152 L
S
0.125 w
278.189 95.4005 m
278.999 95.4005 L
S
278.189 101.335 m
278.999 101.335 L
S
278.189 107.269 m
278.999 107.269 L
S
278.189 113.203 m
278.999 113.203 L
S
278.189 125.072 m
278.999 125.072 L
S
278.189 131.006 m
278.999 131.006 L
S
278.189 136.94 m
278.999 136.94 L
S
278.189 142.875 m
278.999 142.875 L
S
278.189 154.743 m
278.999 154.743 L
S
278.189 160.677 m
278.999 160.677 L
S
278.189 166.612 m
278.999 166.612 L
S
278.189 172.546 m
278.999 172.546 L
S
278.189 184.415 m
278.999 184.415 L
S
278.189 190.349 m
278.999 190.349 L
S
278.189 196.283 m
278.999 196.283 L
S
278.189 202.217 m
278.999 202.217 L
S
278.189 214.086 m
278.999 214.086 L
S
278.189 220.02 m
278.999 220.02 L
S
0.25 w
278.999 89.5245 m
278.999 222.987 L
S
gsave
63.0501 89.5245 m
278.999 89.5245 L
278.999 222.987 L
63.0501 222.987 L
63.0501 89.5245 L
closepath clip newpath
0.299 g
0.5 w
63.0501 96.9964 m
63.3525 97.0309 L
63.8168 97.0827 L
64.3091 97.1389 L
64.7842 97.195 L
65.242 97.2468 L
65.7279 97.3052 L
66.1965 97.3591 L
66.6932 97.4174 L
67.1726 97.4758 L
67.6347 97.5297 L
68.1249 97.588 L
68.5979 97.6463 L
69.0989 97.7068 L
69.5826 97.7673 L
70.049 97.8234 L
70.5436 97.8861 L
71.0208 97.9444 L
71.4786 98.0027 L
71.9667 98.0631 L
72.4374 98.1236 L
72.9363 98.1862 L
73.4178 98.2489 L
73.88 98.3093 L
74.3723 98.3719 L
74.8474 98.4346 L
75.3506 98.5015 L
75.8365 98.5641 L
76.3029 98.6268 L
76.7996 98.6937 L
77.279 98.7585 L
77.739 98.8211 L
78.227 98.8881 L
78.7 98.9529 L
79.201 99.0219 L
79.6825 99.091 L
80.1468 99.1558 L
80.6413 99.2249 L
81.1186 99.294 L
81.5742 99.3588 L
82.0623 99.4301 L
82.5309 99.497 L
83.0297 99.5704 L
83.5091 99.6417 L
83.9713 99.7087 L
84.4636 99.7821 L
84.9365 99.8533 L
85.4375 99.9289 L
85.9234 100.002 L
86.3899 100.076 L
S
86.3899 100.076 m
86.8844 100.151 L
87.3616 100.225 L
87.8216 100.298 L
88.3097 100.374 L
88.7804 100.449 L
89.2814 100.529 L
89.763 100.607 L
90.2251 100.68 L
90.7197 100.762 L
91.1926 100.84 L
91.6504 100.914 L
92.1363 100.996 L
92.6027 101.073 L
93.1016 101.158 L
93.581 101.24 L
94.0409 101.317 L
94.5312 101.402 L
95.0041 101.484 L
95.5051 101.572 L
95.9888 101.657 L
96.4531 101.739 L
96.9476 101.827 L
97.4249 101.911 L
97.8827 101.996 L
98.3707 102.084 L
98.8393 102.17 L
99.3382 102.261 L
99.8197 102.352 L
100.282 102.438 L
100.774 102.531 L
101.247 102.62 L
101.75 102.717 L
102.236 102.81 L
102.703 102.9 L
103.199 102.998 L
103.677 103.09 L
104.137 103.181 L
104.627 103.278 L
105.098 103.373 L
105.599 103.475 L
106.08 103.572 L
106.544 103.667 L
107.039 103.768 L
107.514 103.868 L
107.97 103.963 L
108.458 104.067 L
108.926 104.166 L
109.423 104.272 L
109.902 104.375 L
110.365 104.475 L
S
110.365 104.475 m
110.855 104.58 L
111.328 104.684 L
111.831 104.796 L
112.315 104.902 L
112.781 105.008 L
113.276 105.12 L
113.753 105.228 L
114.211 105.332 L
114.701 105.444 L
115.169 105.554 L
115.67 105.671 L
116.15 105.783 L
116.614 105.893 L
117.106 106.01 L
117.582 106.124 L
118.085 106.245 L
118.571 106.364 L
119.037 106.479 L
119.536 106.602 L
120.013 106.721 L
120.473 106.835 L
120.963 106.958 L
121.436 107.077 L
121.937 107.206 L
122.421 107.329 L
122.885 107.45 L
123.38 107.578 L
123.855 107.703 L
124.313 107.824 L
124.801 107.954 L
125.269 108.079 L
125.768 108.213 L
126.248 108.342 L
126.71 108.47 L
127.202 108.604 L
127.675 108.735 L
128.178 108.876 L
128.662 109.012 L
129.128 109.143 L
129.625 109.284 L
130.102 109.42 L
130.562 109.552 L
131.05 109.694 L
131.521 109.832 L
132.022 109.979 L
132.504 110.122 L
132.968 110.258 L
133.46 110.407 L
133.935 110.549 L
134.393 110.688 L
S
134.393 110.688 m
134.879 110.837 L
135.348 110.981 L
135.844 111.135 L
136.324 111.284 L
136.784 111.428 L
137.276 111.584 L
137.747 111.733 L
138.25 111.892 L
138.734 112.05 L
139.198 112.199 L
139.693 112.361 L
140.17 112.517 L
140.628 112.67 L
141.116 112.832 L
141.586 112.987 L
142.085 113.156 L
142.567 113.32 L
143.029 113.478 L
143.521 113.646 L
143.994 113.81 L
144.5 113.985 L
144.983 114.153 L
145.452 114.32 L
145.946 114.495 L
146.426 114.665 L
146.886 114.829 L
147.376 115.006 L
147.847 115.179 L
148.348 115.361 L
148.829 115.54 L
149.294 115.71 L
149.788 115.896 L
150.263 116.073 L
150.721 116.246 L
151.209 116.432 L
151.678 116.611 L
152.174 116.801 L
152.656 116.987 L
153.116 117.166 L
153.608 117.358 L
154.081 117.546 L
154.584 117.745 L
155.068 117.939 L
155.535 118.125 L
156.029 118.326 L
156.506 118.52 L
156.966 118.708 L
157.454 118.909 L
157.925 119.103 L
158.424 119.31 L
S
158.424 119.31 m
158.905 119.513 L
159.37 119.708 L
159.862 119.917 L
160.337 120.12 L
160.84 120.336 L
161.326 120.546 L
161.795 120.749 L
162.292 120.967 L
162.771 121.176 L
163.231 121.381 L
163.721 121.599 L
164.194 121.809 L
164.695 122.036 L
165.179 122.254 L
165.643 122.467 L
166.138 122.694 L
166.613 122.912 L
167.073 123.126 L
167.559 123.353 L
168.029 123.573 L
168.528 123.809 L
169.008 124.037 L
169.47 124.258 L
169.962 124.495 L
170.435 124.724 L
170.938 124.968 L
171.424 125.206 L
171.89 125.435 L
172.387 125.681 L
172.864 125.918 L
173.324 126.147 L
173.812 126.393 L
174.283 126.633 L
174.784 126.888 L
175.268 127.134 L
175.73 127.374 L
176.225 127.629 L
176.7 127.877 L
177.157 128.117 L
177.643 128.374 L
178.112 128.62 L
178.609 128.885 L
179.088 129.142 L
179.55 129.391 L
180.04 129.659 L
180.513 129.916 L
181.016 130.19 L
181.5 130.458 L
181.964 130.715 L
182.459 130.991 L
S
182.459 130.991 m
182.936 131.259 L
183.396 131.518 L
183.884 131.794 L
184.353 132.062 L
184.854 132.349 L
185.333 132.626 L
185.798 132.894 L
186.29 133.181 L
186.763 133.459 L
187.268 133.755 L
187.754 134.042 L
188.221 134.321 L
188.717 134.619 L
189.197 134.908 L
189.657 135.187 L
190.147 135.485 L
190.618 135.774 L
191.119 136.081 L
191.602 136.381 L
192.067 136.67 L
192.561 136.979 L
193.036 137.279 L
193.494 137.569 L
193.98 137.878 L
194.448 138.178 L
194.947 138.497 L
195.429 138.808 L
195.891 139.109 L
196.381 139.428 L
196.854 139.739 L
197.357 140.072 L
197.843 140.393 L
198.307 140.704 L
198.804 141.037 L
199.281 141.359 L
199.741 141.67 L
200.229 142.002 L
200.7 142.324 L
201.201 142.67 L
201.683 143.002 L
202.145 143.324 L
202.639 143.669 L
203.115 144.002 L
203.57 144.326 L
204.056 144.671 L
204.525 145.004 L
205.021 145.362 L
205.501 145.708 L
205.961 146.04 L
206.453 146.399 L
S
206.453 146.399 m
206.924 146.744 L
207.427 147.114 L
207.909 147.472 L
208.375 147.818 L
208.87 148.187 L
209.347 148.545 L
209.805 148.891 L
210.293 149.26 L
210.761 149.619 L
211.26 150.001 L
211.742 150.372 L
212.204 150.731 L
212.696 151.113 L
213.169 151.485 L
213.672 151.88 L
214.158 152.264 L
214.625 152.633 L
215.121 153.031 L
215.601 153.413 L
216.061 153.784 L
216.549 154.18 L
217.019 154.564 L
217.52 154.974 L
218.004 155.372 L
218.468 155.754 L
218.961 156.164 L
219.436 156.561 L
219.894 156.944 L
220.382 157.354 L
220.848 157.751 L
221.347 158.175 L
221.826 158.585 L
222.289 158.982 L
222.779 159.406 L
223.252 159.816 L
223.755 160.254 L
224.239 160.677 L
224.705 161.088 L
225.2 161.526 L
225.677 161.949 L
226.137 162.36 L
226.625 162.798 L
227.096 163.221 L
227.594 163.675 L
228.076 164.113 L
228.538 164.536 L
229.033 164.99 L
229.506 165.428 L
230.011 165.895 L
230.497 166.348 L
S
230.497 166.348 m
230.963 166.787 L
231.46 167.253 L
231.939 167.707 L
232.399 168.145 L
232.89 168.611 L
233.362 169.065 L
233.863 169.546 L
234.347 170.015 L
234.811 170.466 L
235.306 170.95 L
235.781 171.419 L
236.239 171.87 L
236.727 172.352 L
237.196 172.82 L
237.694 173.319 L
238.176 173.801 L
238.638 174.267 L
239.128 174.766 L
239.601 175.248 L
240.104 175.764 L
240.59 176.26 L
241.057 176.744 L
241.553 177.258 L
242.031 177.757 L
242.491 178.236 L
242.979 178.752 L
243.449 179.249 L
243.95 179.78 L
244.432 180.294 L
244.896 180.791 L
245.389 181.322 L
245.864 181.836 L
246.322 182.331 L
246.807 182.862 L
247.276 183.374 L
247.773 183.922 L
248.252 184.451 L
248.714 184.963 L
249.204 185.512 L
249.677 186.041 L
250.178 186.604 L
250.662 187.151 L
251.129 187.68 L
251.623 188.243 L
252.1 188.79 L
252.558 189.317 L
253.046 189.882 L
253.515 190.427 L
254.016 191.01 L
254.495 191.571 L
S
254.495 191.571 m
254.959 192.115 L
255.452 192.698 L
255.925 193.26 L
256.43 193.86 L
256.914 194.441 L
257.382 195.003 L
257.879 195.601 L
258.356 196.182 L
258.816 196.741 L
259.307 197.341 L
259.777 197.92 L
260.278 198.538 L
260.762 199.136 L
261.226 199.715 L
261.721 200.332 L
262.196 200.928 L
262.654 201.505 L
263.14 202.12 L
263.608 202.716 L
264.107 203.353 L
264.586 203.969 L
265.049 204.563 L
265.541 205.197 L
266.014 205.813 L
266.515 206.467 L
267.001 207.102 L
267.467 207.715 L
267.962 208.37 L
268.439 209.002 L
268.899 209.614 L
269.387 210.268 L
269.858 210.899 L
270.357 211.572 L
270.838 212.224 L
271.302 212.855 L
271.795 213.529 L
272.27 214.179 L
272.775 214.874 L
273.261 215.546 L
273.728 216.196 L
274.226 216.889 L
274.704 217.561 L
275.166 218.208 L
275.656 218.899 L
276.127 219.569 L
276.63 220.284 L
277.112 220.975 L
277.578 221.642 L
278.072 222.355 L
S
278.072 222.355 m
278.511 222.987 L
S
0 g
[ 4.31897 2.15949 ] 0 d
63.0501 96.7998 m
63.3525 96.8344 L
63.8168 96.8862 L
64.3091 96.9445 L
64.7842 96.9985 L
65.242 97.0525 L
65.7279 97.1108 L
66.1965 97.1648 L
66.6932 97.2231 L
67.1726 97.2814 L
67.6347 97.3375 L
68.1249 97.3959 L
68.5979 97.4542 L
69.0989 97.5146 L
69.5826 97.5751 L
70.049 97.6312 L
70.5436 97.6939 L
71.0208 97.7543 L
71.4786 97.8105 L
71.9667 97.8731 L
72.4374 97.9336 L
72.9363 97.9962 L
73.4178 98.0588 L
73.88 98.1193 L
74.3723 98.1841 L
74.8474 98.2467 L
75.3506 98.3136 L
75.8365 98.3784 L
76.3029 98.441 L
76.7996 98.508 L
77.279 98.5728 L
77.739 98.6354 L
78.227 98.7023 L
78.7 98.7693 L
79.201 98.8384 L
79.6825 98.9075 L
80.1468 98.9723 L
80.6413 99.0435 L
81.1186 99.1105 L
81.5742 99.1774 L
82.0623 99.2487 L
82.5309 99.3156 L
83.0297 99.3891 L
83.5091 99.4603 L
83.9713 99.5294 L
84.4636 99.6028 L
84.9365 99.6741 L
85.4375 99.7519 L
85.9234 99.8253 L
86.3899 99.8987 L
S
[ 4.31897 2.15949 ] 0.109036 d
86.3899 99.8987 m
86.8844 99.9743 L
87.3616 100.05 L
87.8216 100.121 L
88.3097 100.199 L
88.7804 100.274 L
89.2814 100.354 L
89.763 100.434 L
90.2251 100.51 L
90.7197 100.59 L
91.1926 100.667 L
91.6504 100.745 L
92.1363 100.825 L
92.6027 100.905 L
93.1016 100.989 L
93.581 101.071 L
94.0409 101.151 L
94.5312 101.235 L
95.0041 101.317 L
95.5051 101.406 L
95.9888 101.492 L
96.4531 101.577 L
96.9476 101.665 L
97.4249 101.752 L
97.8827 101.834 L
98.3707 101.924 L
98.8393 102.011 L
99.3382 102.104 L
99.8197 102.194 L
100.282 102.281 L
100.774 102.376 L
101.247 102.466 L
101.75 102.564 L
102.236 102.656 L
102.703 102.747 L
103.199 102.846 L
103.677 102.941 L
104.137 103.032 L
104.627 103.131 L
105.098 103.226 L
105.599 103.328 L
106.08 103.427 L
106.544 103.524 L
107.039 103.626 L
107.514 103.727 L
107.97 103.822 L
108.458 103.926 L
108.926 104.028 L
109.423 104.133 L
109.902 104.239 L
110.365 104.341 L
S
[ 4.31897 2.15949 ] 0.221965 d
110.365 104.341 m
110.855 104.449 L
111.328 104.552 L
111.831 104.665 L
112.315 104.775 L
112.781 104.881 L
113.276 104.993 L
113.753 105.103 L
114.211 105.209 L
114.701 105.323 L
115.169 105.433 L
115.67 105.55 L
116.15 105.667 L
116.614 105.777 L
117.106 105.896 L
117.582 106.01 L
118.085 106.135 L
118.571 106.254 L
119.037 106.371 L
119.536 106.494 L
120.013 106.615 L
120.473 106.731 L
120.963 106.857 L
121.436 106.977 L
121.937 107.107 L
122.421 107.232 L
122.885 107.355 L
123.38 107.485 L
123.855 107.612 L
124.313 107.735 L
124.801 107.867 L
125.269 107.995 L
125.768 108.131 L
126.248 108.262 L
126.71 108.39 L
127.202 108.528 L
127.675 108.66 L
128.178 108.802 L
128.662 108.94 L
129.128 109.074 L
129.625 109.217 L
130.102 109.357 L
130.562 109.491 L
131.05 109.636 L
131.521 109.774 L
132.022 109.925 L
132.504 110.07 L
132.968 110.21 L
133.46 110.359 L
133.935 110.506 L
134.393 110.646 L
S
[ 4.31897 2.15949 ] 0.337037 d
134.393 110.646 m
134.879 110.798 L
135.348 110.944 L
135.844 111.1 L
136.324 111.253 L
136.784 111.4 L
137.276 111.558 L
137.747 111.711 L
138.25 111.873 L
138.734 112.033 L
139.198 112.186 L
139.693 112.35 L
140.17 112.51 L
140.628 112.663 L
141.116 112.83 L
141.586 112.99 L
142.085 113.16 L
142.567 113.326 L
143.029 113.488 L
143.521 113.659 L
143.994 113.827 L
144.5 114.004 L
144.983 114.179 L
145.452 114.346 L
145.946 114.525 L
146.426 114.7 L
146.886 114.868 L
147.376 115.05 L
147.847 115.225 L
148.348 115.41 L
148.829 115.592 L
149.294 115.769 L
149.788 115.957 L
150.263 116.138 L
150.721 116.315 L
151.209 116.503 L
151.678 116.687 L
152.174 116.881 L
152.656 117.071 L
153.116 117.255 L
153.608 117.451 L
154.081 117.643 L
154.584 117.846 L
155.068 118.045 L
155.535 118.235 L
156.029 118.44 L
156.506 118.639 L
156.966 118.831 L
157.454 119.036 L
157.925 119.235 L
158.424 119.449 L
S
[ 4.31897 2.15949 ] 0.4556 d
158.424 119.449 m
158.905 119.656 L
159.37 119.855 L
159.862 120.068 L
160.337 120.276 L
160.84 120.498 L
161.326 120.714 L
161.795 120.921 L
162.292 121.144 L
162.771 121.36 L
163.231 121.569 L
163.721 121.792 L
164.194 122.01 L
164.695 122.241 L
165.179 122.465 L
165.643 122.683 L
166.138 122.915 L
166.613 123.141 L
167.073 123.359 L
167.559 123.593 L
168.029 123.817 L
168.528 124.059 L
169.008 124.294 L
169.47 124.521 L
169.962 124.763 L
170.435 124.998 L
170.938 125.249 L
171.424 125.493 L
171.89 125.728 L
172.387 125.981 L
172.864 126.225 L
173.324 126.463 L
173.812 126.715 L
174.283 126.959 L
174.784 127.223 L
175.268 127.475 L
175.73 127.722 L
176.225 127.985 L
176.7 128.24 L
177.157 128.486 L
177.643 128.749 L
178.112 129.004 L
178.609 129.276 L
179.088 129.542 L
179.55 129.797 L
180.04 130.071 L
180.513 130.337 L
181.016 130.62 L
181.5 130.894 L
181.964 131.159 L
182.459 131.444 L
S
[ 4.31897 2.15949 ] 0.580066 d
182.459 131.444 m
182.936 131.721 L
183.396 131.987 L
183.884 132.272 L
184.353 132.548 L
184.854 132.842 L
185.333 133.129 L
185.798 133.405 L
186.29 133.701 L
186.763 133.986 L
187.268 134.293 L
187.754 134.591 L
188.221 134.878 L
188.717 135.185 L
189.197 135.481 L
189.657 135.77 L
190.147 136.077 L
190.618 136.375 L
191.119 136.694 L
191.602 137.001 L
192.067 137.301 L
192.561 137.618 L
193.036 137.929 L
193.494 138.227 L
193.98 138.547 L
194.448 138.856 L
194.947 139.188 L
195.429 139.508 L
195.891 139.819 L
196.381 140.149 L
196.854 140.471 L
197.357 140.815 L
197.843 141.147 L
198.307 141.467 L
198.804 141.812 L
199.281 142.145 L
199.741 142.467 L
200.229 142.81 L
200.7 143.145 L
201.201 143.501 L
201.683 143.844 L
202.145 144.179 L
202.639 144.535 L
203.115 144.881 L
203.57 145.216 L
204.056 145.572 L
204.525 145.917 L
205.021 146.287 L
205.501 146.645 L
205.961 146.991 L
206.453 147.362 L
S
[ 4.31897 2.15949 ] 0.71349 d
206.453 147.362 m
206.924 147.721 L
207.427 148.103 L
207.909 148.474 L
208.375 148.833 L
208.87 149.215 L
209.347 149.586 L
209.805 149.945 L
210.293 150.329 L
210.761 150.701 L
211.26 151.098 L
211.742 151.482 L
212.204 151.854 L
212.696 152.251 L
213.169 152.636 L
213.672 153.046 L
214.158 153.443 L
214.625 153.828 L
215.121 154.24 L
215.601 154.637 L
216.061 155.024 L
216.549 155.434 L
217.019 155.834 L
217.52 156.259 L
218.004 156.672 L
218.468 157.069 L
218.961 157.494 L
219.436 157.907 L
219.894 158.306 L
220.382 158.732 L
220.848 159.144 L
221.347 159.585 L
221.826 160.012 L
222.289 160.425 L
222.779 160.865 L
223.252 161.291 L
223.755 161.746 L
224.239 162.189 L
224.705 162.615 L
225.2 163.072 L
225.677 163.513 L
226.137 163.938 L
226.625 164.396 L
227.096 164.837 L
227.594 165.307 L
228.076 165.765 L
228.538 166.206 L
229.033 166.677 L
229.506 167.134 L
230.011 167.62 L
230.497 168.093 L
S
[ 4.31897 2.15949 ] 0.860597 d
230.497 168.093 m
230.963 168.549 L
231.46 169.037 L
231.939 169.51 L
232.399 169.965 L
232.89 170.453 L
233.362 170.924 L
233.863 171.43 L
234.347 171.915 L
234.811 172.388 L
235.306 172.892 L
235.781 173.38 L
236.239 173.85 L
236.727 174.356 L
237.196 174.842 L
237.694 175.362 L
238.176 175.867 L
238.638 176.353 L
239.128 176.874 L
239.601 177.379 L
240.104 177.917 L
240.59 178.437 L
241.057 178.94 L
241.553 179.478 L
242.031 179.998 L
242.491 180.499 L
242.979 181.037 L
243.449 181.558 L
243.95 182.113 L
244.432 182.65 L
244.896 183.171 L
245.389 183.726 L
245.864 184.261 L
246.322 184.782 L
246.807 185.337 L
247.276 185.872 L
247.773 186.444 L
248.252 186.999 L
248.714 187.535 L
249.204 188.107 L
249.677 188.662 L
250.178 189.254 L
250.662 189.826 L
251.129 190.379 L
251.623 190.971 L
252.1 191.541 L
252.558 192.094 L
253.046 192.685 L
253.515 193.256 L
254.016 193.867 L
254.495 194.456 L
S
[ 4.31897 2.15949 ] 1.02578 d
254.495 194.456 m
254.959 195.026 L
255.452 195.635 L
255.925 196.225 L
256.43 196.853 L
256.914 197.462 L
257.382 198.052 L
257.879 198.68 L
258.356 199.289 L
258.816 199.876 L
259.307 200.505 L
259.777 201.112 L
260.278 201.762 L
260.762 202.388 L
261.226 202.995 L
261.721 203.643 L
262.196 204.271 L
262.654 204.876 L
263.14 205.521 L
263.608 206.148 L
264.107 206.817 L
264.586 207.463 L
265.049 208.087 L
265.541 208.754 L
266.014 209.4 L
266.515 210.089 L
267.001 210.756 L
267.467 211.4 L
267.962 212.086 L
268.439 212.754 L
268.899 213.395 L
269.387 214.084 L
269.858 214.747 L
270.357 215.457 L
270.838 216.142 L
271.302 216.805 L
271.795 217.513 L
272.27 218.198 L
272.775 218.93 L
273.261 219.636 L
273.728 220.32 L
274.226 221.05 L
274.704 221.756 L
275.166 222.439 L
S
[ 4.31897 2.15949 ] 0 d
275.166 222.439 m
275.535 222.987 L
S
[ 0.215949 2.15949 ] 0 d
63.0501 89.8009 m
63.3525 89.8053 L
63.8168 89.8096 L
64.3091 89.8139 L
64.7842 89.8182 L
65.242 89.8225 L
65.7279 89.8268 L
66.1965 89.8312 L
66.6932 89.8355 L
67.1726 89.842 L
67.6347 89.8463 L
68.1249 89.8506 L
68.5979 89.8549 L
69.0989 89.8614 L
69.5826 89.8657 L
70.049 89.87 L
70.5436 89.8765 L
71.0208 89.8808 L
71.4786 89.8873 L
71.9667 89.8916 L
72.4374 89.8981 L
72.9363 89.9046 L
73.4178 89.9089 L
73.88 89.9154 L
74.3723 89.9219 L
74.8474 89.9283 L
75.3506 89.9348 L
75.8365 89.9413 L
76.3029 89.9478 L
76.7996 89.9543 L
77.279 89.9629 L
77.739 89.9694 L
78.227 89.9759 L
78.7 89.9845 L
79.201 89.9931 L
79.6825 90.0018 L
80.1468 90.0082 L
80.6413 90.0169 L
81.1186 90.0255 L
81.5742 90.0342 L
82.0623 90.045 L
82.5309 90.0536 L
83.0297 90.0622 L
83.5091 90.073 L
83.9713 90.0838 L
84.4636 90.0925 L
84.9365 90.1033 L
85.4375 90.1162 L
85.9234 90.127 L
86.3899 90.1378 L
S
[ 0.215949 2.15949 ] 0.108093 d
86.3899 90.1378 m
86.8844 90.1508 L
87.3616 90.1616 L
87.8216 90.1745 L
88.3097 90.1875 L
88.7804 90.2004 L
89.2814 90.2134 L
89.763 90.2263 L
90.2251 90.2415 L
90.7197 90.2544 L
91.1926 90.2695 L
91.6504 90.2847 L
92.1363 90.2998 L
92.6027 90.3149 L
93.1016 90.3322 L
93.581 90.3473 L
94.0409 90.3646 L
94.5312 90.3818 L
95.0041 90.3991 L
95.5051 90.4164 L
95.9888 90.4358 L
96.4531 90.4531 L
96.9476 90.4725 L
97.4249 90.492 L
97.8827 90.5114 L
98.3707 90.533 L
98.8393 90.5524 L
99.3382 90.574 L
99.8197 90.5956 L
100.282 90.6172 L
100.774 90.641 L
101.247 90.6626 L
101.75 90.6863 L
102.236 90.7122 L
102.703 90.736 L
103.199 90.7598 L
103.677 90.7857 L
104.137 90.8116 L
104.627 90.8375 L
105.098 90.8634 L
105.599 90.8915 L
106.08 90.9196 L
106.544 90.9476 L
107.039 90.9779 L
107.514 91.0059 L
107.97 91.034 L
108.458 91.0642 L
108.926 91.0945 L
109.423 91.1269 L
109.902 91.1593 L
110.365 91.1917 L
S
[ 0.215949 2.15949 ] 0.219229 d
110.365 91.1917 m
110.855 91.224 L
111.328 91.2586 L
111.831 91.2931 L
112.315 91.3298 L
112.781 91.3622 L
113.276 91.4011 L
113.753 91.4378 L
114.211 91.4724 L
114.701 91.5112 L
115.169 91.548 L
115.67 91.589 L
116.15 91.6279 L
116.614 91.6667 L
117.106 91.7099 L
117.582 91.7509 L
118.085 91.7941 L
118.571 91.8373 L
119.037 91.8805 L
119.536 91.9259 L
120.013 91.9691 L
120.473 92.0144 L
120.963 92.0598 L
121.436 92.1073 L
121.937 92.1569 L
122.421 92.2045 L
122.885 92.252 L
123.38 92.3016 L
123.855 92.3535 L
124.313 92.401 L
124.801 92.4528 L
125.269 92.5046 L
125.768 92.5586 L
126.248 92.6126 L
126.71 92.6666 L
127.202 92.7227 L
127.675 92.7767 L
128.178 92.8372 L
128.662 92.8955 L
129.128 92.9516 L
129.625 93.0121 L
130.102 93.0704 L
130.562 93.1287 L
131.05 93.1913 L
131.521 93.2518 L
132.022 93.3187 L
132.504 93.3814 L
132.968 93.444 L
133.46 93.5109 L
133.935 93.5757 L
134.393 93.6405 L
S
[ 0.215949 2.15949 ] 0.331099 d
134.393 93.6405 m
134.879 93.7074 L
135.348 93.7744 L
135.844 93.8457 L
136.324 93.9169 L
136.784 93.9839 L
137.276 94.0573 L
137.747 94.1286 L
138.25 94.2063 L
138.734 94.2797 L
139.198 94.3531 L
139.693 94.4309 L
140.17 94.5086 L
140.628 94.582 L
141.116 94.6619 L
141.586 94.7397 L
142.085 94.8239 L
142.567 94.9038 L
143.029 94.9837 L
143.521 95.0679 L
143.994 95.1521 L
144.5 95.2407 L
144.983 95.3271 L
145.452 95.4113 L
145.946 95.502 L
146.426 95.5905 L
146.886 95.6747 L
147.376 95.7676 L
147.847 95.8583 L
148.348 95.9533 L
148.829 96.0462 L
149.294 96.139 L
149.788 96.2362 L
150.263 96.3312 L
150.721 96.4241 L
151.209 96.5234 L
151.678 96.6184 L
152.174 96.7221 L
152.656 96.8236 L
153.116 96.9229 L
153.608 97.0266 L
154.081 97.1302 L
154.584 97.2382 L
155.068 97.3462 L
155.535 97.4498 L
156.029 97.5621 L
156.506 97.6701 L
156.966 97.7738 L
157.454 97.8882 L
157.925 97.9962 L
158.424 98.115 L
S
[ 0.215949 2.15949 ] 0.444333 d
158.424 98.115 m
158.905 98.2294 L
159.37 98.3396 L
159.862 98.4605 L
160.337 98.5749 L
160.84 98.7002 L
161.326 98.8211 L
161.795 98.9377 L
162.292 99.063 L
162.771 99.1861 L
163.231 99.3048 L
163.721 99.4323 L
164.194 99.5553 L
164.695 99.6892 L
165.179 99.8166 L
165.643 99.9419 L
166.138 100.076 L
166.613 100.208 L
167.073 100.333 L
167.559 100.469 L
168.029 100.601 L
168.528 100.741 L
169.008 100.879 L
169.47 101.011 L
169.962 101.153 L
170.435 101.292 L
170.938 101.441 L
171.424 101.585 L
171.89 101.723 L
172.387 101.875 L
172.864 102.019 L
173.324 102.16 L
173.812 102.313 L
174.283 102.458 L
174.784 102.615 L
175.268 102.769 L
175.73 102.915 L
176.225 103.075 L
176.7 103.229 L
177.157 103.378 L
177.643 103.537 L
178.112 103.693 L
178.609 103.859 L
179.088 104.021 L
179.55 104.177 L
180.04 104.345 L
180.513 104.507 L
181.016 104.682 L
181.5 104.85 L
181.964 105.015 L
182.459 105.189 L
S
[ 0.215949 2.15949 ] 0.560413 d
182.459 105.189 m
182.936 105.36 L
183.396 105.524 L
183.884 105.701 L
184.353 105.872 L
184.854 106.055 L
185.333 106.235 L
185.798 106.405 L
186.29 106.591 L
186.763 106.77 L
187.268 106.962 L
187.754 107.148 L
188.221 107.327 L
188.717 107.522 L
189.197 107.707 L
189.657 107.889 L
190.147 108.083 L
190.618 108.271 L
191.119 108.474 L
191.602 108.668 L
192.067 108.858 L
192.561 109.061 L
193.036 109.258 L
193.494 109.448 L
193.98 109.651 L
194.448 109.847 L
194.947 110.059 L
195.429 110.264 L
195.891 110.463 L
196.381 110.675 L
196.854 110.88 L
197.357 111.1 L
197.843 111.314 L
198.307 111.521 L
198.804 111.741 L
199.281 111.957 L
199.741 112.165 L
200.229 112.387 L
200.7 112.601 L
201.201 112.832 L
201.683 113.054 L
202.145 113.27 L
202.639 113.501 L
203.115 113.726 L
203.57 113.942 L
204.056 114.175 L
204.525 114.4 L
205.021 114.639 L
205.501 114.873 L
205.961 115.099 L
206.453 115.339 L
S
[ 0.215949 2.15949 ] 0.681124 d
206.453 115.339 m
206.924 115.572 L
207.427 115.823 L
207.909 116.065 L
208.375 116.3 L
208.87 116.551 L
209.347 116.792 L
209.805 117.028 L
210.293 117.28 L
210.761 117.522 L
211.26 117.784 L
211.742 118.036 L
212.204 118.28 L
212.696 118.539 L
213.169 118.792 L
213.672 119.064 L
214.158 119.325 L
214.625 119.578 L
215.121 119.85 L
215.601 120.111 L
216.061 120.364 L
216.549 120.636 L
217.019 120.9 L
217.52 121.18 L
218.004 121.453 L
218.468 121.716 L
218.961 121.997 L
219.436 122.269 L
219.894 122.532 L
220.382 122.815 L
220.848 123.087 L
221.347 123.379 L
221.826 123.662 L
222.289 123.934 L
222.779 124.227 L
223.252 124.508 L
223.755 124.811 L
224.239 125.104 L
224.705 125.387 L
225.2 125.689 L
225.677 125.981 L
226.137 126.264 L
226.625 126.566 L
227.096 126.86 L
227.594 127.173 L
228.076 127.475 L
228.538 127.769 L
229.033 128.082 L
229.506 128.385 L
230.011 128.708 L
230.497 129.022 L
S
[ 0.215949 2.15949 ] 0.809301 d
230.497 129.022 m
230.963 129.326 L
231.46 129.65 L
231.939 129.963 L
232.399 130.265 L
232.89 130.589 L
233.362 130.902 L
233.863 131.237 L
234.347 131.563 L
234.811 131.876 L
235.306 132.211 L
235.781 132.535 L
236.239 132.848 L
236.727 133.183 L
237.196 133.507 L
237.694 133.852 L
238.176 134.187 L
238.638 134.511 L
239.128 134.856 L
239.601 135.191 L
240.104 135.548 L
240.59 135.893 L
241.057 136.228 L
241.553 136.584 L
242.031 136.93 L
242.491 137.264 L
242.979 137.621 L
243.449 137.966 L
243.95 138.335 L
244.432 138.692 L
244.896 139.035 L
245.389 139.404 L
245.864 139.761 L
246.322 140.104 L
246.807 140.471 L
247.276 140.827 L
247.773 141.205 L
248.252 141.572 L
248.714 141.929 L
249.204 142.307 L
249.677 142.674 L
250.178 143.065 L
250.662 143.443 L
251.129 143.81 L
251.623 144.201 L
252.1 144.578 L
252.558 144.943 L
253.046 145.332 L
253.515 145.71 L
254.016 146.112 L
254.495 146.503 L
S
[ 0.215949 2.15949 ] 0.946854 d
254.495 146.503 m
254.959 146.878 L
255.452 147.28 L
255.925 147.669 L
256.43 148.083 L
256.914 148.485 L
257.382 148.872 L
257.879 149.286 L
258.356 149.686 L
258.816 150.072 L
259.307 150.485 L
259.777 150.884 L
260.278 151.31 L
260.762 151.722 L
261.226 152.122 L
261.721 152.545 L
262.196 152.957 L
262.654 153.352 L
263.14 153.778 L
263.608 154.186 L
264.107 154.624 L
264.586 155.048 L
265.049 155.456 L
265.541 155.892 L
266.014 156.313 L
266.515 156.762 L
267.001 157.196 L
267.467 157.617 L
267.962 158.067 L
268.439 158.499 L
268.899 158.917 L
269.387 159.365 L
269.858 159.796 L
270.357 160.259 L
270.838 160.703 L
271.302 161.133 L
271.795 161.593 L
272.27 162.038 L
272.775 162.511 L
273.261 162.969 L
273.728 163.411 L
274.226 163.884 L
274.704 164.34 L
275.166 164.781 L
275.656 165.251 L
276.127 165.707 L
276.63 166.191 L
277.112 166.659 L
277.578 167.113 L
278.072 167.596 L
278.548 168.063 L
S
[ 0.215949 2.15949 ] 1.09649 d
278.548 168.063 m
278.999 168.506 L
S
grestore
showpage
%%PageTrailer
%%Trailer
%%Pages: 1 
%%DocumentNeededResources: font Courier
%%EOF

%%EndDocument
 @endspecial 747 1757 a
 /End PSfrag
 747 1757 a 747 254 a
 /Hide PSfrag
 747 254
a 7 311 a Fe(PSfrag)26 b(replacemen)n(ts)p 7 341 741
4 v 747 344 a
 /Unhide PSfrag
 747 344 a 714 444 a
  {
 714 444 a Fd(1)714
444 y
  } 0/Place PSfrag
 714 444 a 714 543 a
  {
 714 543 a Fd(2)714 543 y
  } 1/Place PSfrag
 714
543 a 714 643 a
  {
 714 643 a Fd(3)714 643 y
  } 2/Place PSfrag
 714 643 a 714
742 a
  {
 714 742 a Fd(4)714 742 y
  } 3/Place PSfrag
 714 742 a 629 842 a
  {
 629
842 a Fd(0.55)629 842 y
  } 4/Place PSfrag
 629 842 a 662 942 a
  {
 662 942 a
Fd(0.6)662 942 y
  } 5/Place PSfrag
 662 942 a 629 1041 a
  {
 629 1041 a Fd(0.65)629
1041 y
  } 6/Place PSfrag
 629 1041 a 662 1141 a
  {
 662 1141 a Fd(0.7)662 1141
y
  } 7/Place PSfrag
 662 1141 a 629 1241 a
  {
 629 1241 a Fd(0.75)629 1241 y
  } 8/Place PSfrag

629 1241 a 662 1340 a
  {
 662 1340 a Fd(0.8)662 1340 y
  } 9/Place PSfrag
 662
1340 a 629 1440 a
  {
 629 1440 a Fd(0.85)629 1440 y
  } 10/Place PSfrag
 629 1440
a 662 1539 a
  {
 662 1539 a Fd(0.9)662 1539 y
  } 11/Place PSfrag
 662 1539 a
327 1620 a
  {
 327 1620 a 432 1587 a Fc(W)p 420 1601 95 4
v 420 1649 a(W)482 1657 y Fb(0)544 1620 y Fa(\002)18
b Fe(10)711 1590 y Fd(2)327 1620 y
  } 12/Place PSfrag
 327 1620 a 635 1728
a
  {
 635 1728 a 669 1695 a Fc(!)p 645 1709 93 4 v 645 1757
a Fd(2)p Fc(m)635 1728 y
  } 13/Place PSfrag
 635 1728 a eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF

%%EndDocument
 @endspecial eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
