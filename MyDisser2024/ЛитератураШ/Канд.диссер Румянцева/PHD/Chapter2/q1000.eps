%!PS-Adobe-3.0 EPSF-3.0
%%Creator: dvips(k) 5.86 Copyright 1999 Radical Eye Software
%%Title: PIC4.dvi
%%CreationDate: Thu Apr 14 22:51:28 2005
%%Pages: 1
%%PageOrder: Ascend
%%BoundingBox: 163 552 447 718
%%DocumentFonts: Courier
%%DocumentPaperSizes: a4
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips PIC4.dvi
%DVIPSParameters: dpi=600, compressed
%DVIPSSource:  TeX output 2005.04.14:2251
%%BeginProcSet: texc.pro
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/id 0 N/rw 0 N/rc 0 N/gp 0 N/cp 0 N/G 0 N/CharBuilder{save 3
1 roll S A/base get 2 index get S/BitMaps get S get/Cd X pop/ctr 0 N Cdx
0 Cx Cy Ch sub Cx Cw add Cy setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx
sub Cy .1 sub]/id Ci N/rw Cw 7 add 8 idiv string N/rc 0 N/gp 0 N/cp 0 N{
rc 0 ne{rc 1 sub/rc X rw}{G}ifelse}imagemask restore}B/G{{id gp get/gp
gp 1 add N A 18 mod S 18 idiv pl S get exec}loop}B/adv{cp add/cp X}B
/chg{rw cp id gp 4 index getinterval putinterval A gp add/gp X adv}B/nd{
/cp 0 N rw exit}B/lsh{rw cp 2 copy get A 0 eq{pop 1}{A 255 eq{pop 254}{
A A add 255 and S 1 and or}ifelse}ifelse put 1 adv}B/rsh{rw cp 2 copy
get A 0 eq{pop 128}{A 255 eq{pop 127}{A 2 idiv S 128 and or}ifelse}
ifelse put 1 adv}B/clr{rw cp 2 index string putinterval adv}B/set{rw cp
fillstr 0 4 index getinterval putinterval adv}B/fillstr 18 string 0 1 17
{2 copy 255 put pop}for N/pl[{adv 1 chg}{adv 1 chg nd}{1 add chg}{1 add
chg nd}{adv lsh}{adv lsh nd}{adv rsh}{adv rsh nd}{1 add adv}{/rc X nd}{
1 add set}{1 add clr}{adv 2 chg}{adv 2 chg nd}{pop nd}]A{bind pop}
forall N/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: psfrag.pro
%%
%% This is file `psfrag.pro',
%% generated with the docstrip utility.
%%
%% The original source files were:
%%
%% psfrag.dtx  (with options: `filepro')
%% 
%% Copyright (c) 1996 Craig Barratt, Michael C. Grant, and David Carlisle.
%% All rights reserved.
%% 
%% This file is part of the PSfrag package.
%% 
userdict begin
/PSfragLib 90 dict def
/PSfragDict 6 dict def
/PSfrag { PSfragLib begin load exec end } bind def
end
PSfragLib begin
/RO /readonly      load def
/CP /currentpoint  load def
/CM /currentmatrix load def
/B { bind RO def } bind def
/X { exch def } B
/MD { { X } forall } B
/OE { end exec PSfragLib begin } B
/S false def
/tstr 8 string def
/islev2 { languagelevel } stopped { false } { 2 ge } ifelse def
[ /sM /tM /srcM /dstM /dM /idM /srcFM /dstFM ] { matrix def } forall
sM currentmatrix RO pop
dM defaultmatrix RO idM invertmatrix RO pop
srcFM identmatrix pop
/Hide { gsave { CP } stopped not newpath clip { moveto } if } B
/Unhide { { CP } stopped not grestore { moveto } if } B
/setrepl islev2 {{ /glob currentglobal def true setglobal array astore
                   globaldict exch /PSfrags exch put glob setglobal }}
                {{ array astore /PSfrags X }} ifelse B
/getrepl islev2 {{ globaldict /PSfrags get aload length }}
                {{ PSfrags aload length }} ifelse B
/convert {
   /src X src length string
   /c 0 def src length {
      dup c src c get dup 32 lt { pop 32 } if put /c c 1 add def
   } repeat
} B
/Begin {
    /saver save def
    srcFM exch 3 exch put
    0 ne /debugMode X 0 setrepl
    dup /S exch dict def { S 3 1 roll exch convert exch put } repeat
    srcM CM dup invertmatrix pop
    mark { currentdict { end } stopped { pop exit } if } loop
    PSfragDict counttomark { begin } repeat pop
} B
/End {
    mark { currentdict end dup PSfragDict eq { pop exit } if } loop
    counttomark { begin } repeat pop
    getrepl saver restore
    7 idiv dup /S exch dict def {
        6 array astore /mtrx X tstr cvs /K X
        S K [ S K known { S K get aload pop } if mtrx ] put
    } repeat
} B
/Place {
    tstr cvs /K X
    S K known {
        bind /proc X tM CM pop
        CP /cY X /cX X
        0 0 transform idtransform neg /aY X neg /aX X
        S K get dup length /maxiter X
        /iter 1 def {
            iter maxiter ne { /saver save def } if
            tM setmatrix aX aY translate
            [ exch aload pop idtransform ] concat
            cX neg cY neg translate cX cY moveto
            /proc load OE
            iter maxiter ne { saver restore /iter iter 1 add def } if
        } forall
        /noXY { CP /cY X /cX X } stopped def
        tM setmatrix noXY { newpath } { cX cY moveto } ifelse
    } {
        Hide OE Unhide
    } ifelse
} B
/normalize {
    2 index dup mul 2 index dup mul add sqrt div
    dup 4 -1 roll exch mul 3 1 roll mul
} B
/replace {
    aload pop MD
    CP /bY X /lX X gsave sM setmatrix
    str stringwidth abs exch abs add dup 0 eq
        { pop } { 360 exch div dup scale } ifelse
    lX neg bY neg translate newpath lX bY moveto
    str { /ch X ( ) dup 0 ch put false charpath ch Kproc } forall
    flattenpath pathbbox [ /uY /uX /lY /lX ] MD
    CP grestore moveto
    currentfont /FontMatrix get dstFM copy dup
    0 get 0 lt { uX lX /uX X /lX X } if
    3 get 0 lt { uY lY /uY X /lY X } if
    /cX uX lX add 0.5 mul def
    /cY uY lY add 0.5 mul def
    debugMode { gsave 0 setgray 1 setlinewidth
        lX lY moveto lX uY lineto uX uY lineto uX lY lineto closepath
        lX bY moveto uX bY lineto lX cY moveto uX cY lineto
        cX lY moveto cX uY lineto stroke
    grestore } if
    dstFM dup invertmatrix dstM CM srcM
    2 { dstM concatmatrix } repeat pop
    getrepl /temp X
        S str convert get {
            aload pop [ /rot /scl /loc /K ] MD
            /aX cX def /aY cY def
            loc {
                dup 66  eq { /aY bY def } { % B
                dup 98  eq { /aY lY def } { % b
                dup 108 eq { /aX lX def } { % l
                dup 114 eq { /aX uX def } { % r
                dup 116 eq { /aY uY def }   % t
                if } ifelse } ifelse } ifelse } ifelse pop
            } forall
            K srcFM rot tM rotate dstM
            2 { tM concatmatrix } repeat aload pop pop pop
            2 { scl normalize 4 2 roll } repeat
            aX aY transform
            /temp temp 7 add def
        } forall
    temp setrepl
} B
/Rif {
    S 3 index convert known { pop replace } { exch pop OE } ifelse
} B
/XA { bind [ /Kproc /str } B /XC { ] 2 array astore def } B
/xs   { pop } XA XC
/xks  { /kern load OE } XA /kern XC
/xas  { pop ax ay rmoveto } XA /ay /ax XC
/xws  { c eq { cx cy rmoveto } if } XA /c /cy /cx XC
/xaws { ax ay rmoveto c eq { cx cy rmoveto } if }
    XA /ay /ax /c /cy /cx XC
/raws { xaws { awidthshow } Rif } B
/rws  { xws { widthshow } Rif } B
/rks  { xks { kshow } Rif } B
/ras  { xas { ashow } Rif } B
/rs   { xs { show } Rif } B
/rrs { getrepl dup 2 add -1 roll //restore exec setrepl } B
PSfragDict begin
islev2 not { /restore { /rrs PSfrag } B } if
/show       { /rs   PSfrag } B
/kshow      { /rks  PSfrag } B
/ashow      { /ras  PSfrag } B
/widthshow  { /rws  PSfrag } B
/awidthshow { /raws PSfrag } B
end PSfragDict RO pop
end

%%EndProcSet
%%BeginProcSet: 8r.enc
% @@psencodingfile@{
%   author = "S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry",
%   version = "0.6",
%   date = "1 July 1998",
%   filename = "8r.enc",
%   email = "tex-fonts@@tug.org",
%   docstring = "Encoding for TrueType or Type 1 fonts
%                to be used with TeX."
% @}
% 
% Idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard Encoding + ISO Latin 1 + extra characters from Lucida.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% 
% (4) Remaining positions left undefined are for use in (hopefully)
% upward-compatible revisions, if someday more characters are generally
% available.
% 
% (5) hyphen appears twice for compatibility with both 
% ASCII and Windows.
% 
/TeXBase1Encoding [
% 0x00 (encoded characters from Adobe Standard not in Windows 3.1)
  /.notdef /dotaccent /fi /fl
  /fraction /hungarumlaut /Lslash /lslash
  /ogonek /ring /.notdef
  /breve /minus /.notdef 
% These are the only two remaining unencoded characters, so may as
% well include them.
  /Zcaron /zcaron 
% 0x10
 /caron /dotlessi 
% (unusual TeX characters available in, e.g., Lucida Bright)
 /dotlessj /ff /ffi /ffl 
 /.notdef /.notdef /.notdef /.notdef
 /.notdef /.notdef /.notdef /.notdef
 % very contentious; it's so painful not having quoteleft and quoteright
 % at 96 and 145 that we move the things normally found there to here.
 /grave /quotesingle 
% 0x20 (ASCII begins)
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three /four /five /six /seven
 /eight /nine /colon /semicolon /less /equal /greater /question
% 0x40
 /at /A /B /C /D /E /F /G /H /I /J /K /L /M /N /O
% 0x50
 /P /Q /R /S /T /U /V /W
 /X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c /d /e /f /g /h /i /j /k /l /m /n /o
% 0x70
 /p /q /r /s /t /u /v /w
 /x /y /z /braceleft /bar /braceright /asciitilde
 /.notdef % rubout; ASCII ends
% 0x80
 /.notdef /.notdef /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /.notdef /.notdef /.notdef
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /.notdef /.notdef /Ydieresis
% 0xA0
 /.notdef % nobreakspace
 /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot
 /hyphen % Y&Y (also at 45); Windows' softhyphen
 /registered
 /macron
% 0xD0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def

%%EndProcSet
%%BeginProcSet: special.pro
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/copypage{}N/p 3 def @MacSetUp}N/doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N/endTexFig{end psf$SavedState restore}N/@beginspecial{SDict
begin/SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count/ocount X/dcount countdictstack N}N/@setspecial{
CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if/showpage{}N/erasepage{}N/copypage{}N newpath}N
/@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{end}
repeat grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
TeXDict begin 39158280 55380996 1000 600 600 (PIC4.dvi)
@start
%DVIPSBitmapFont: Fa cmmi5 5 1
/Fa 1 102 df<137F3803FF80380781C0EA0E005A5A38780780387FFF00EAFFF800F0C7
FCA3127014406C13E0383C03C0380FFF00EA07F813127C911C>101
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fb cmmi7 7 2
/Fb 2 110 df<000FB712E05A9039800FE007D81E009038C001C05A0038011F13001230
00705C00601501023F148012E0481400A2C74890C7FCA2147EA214FEA25CA21301A25CA2
1303A25CA21307A25CA2130FA25CA2131F001FB57EA22B287DA727>84
D<3B07801FC007E03B0FE07FF01FF83B18F0E0F8783C3B30F1807CE03E903AFB007D801E
D860FEEB3F005B49133E00C14A133E5B1201A24848495BA35F4848485A1830EE01F0A23C
0F8003E003E060A218C0933801E180271F0007C013E3933800FF00000E6D48137C341B7D
993B>109 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fc cmsy7 7 1
/Fc 1 1 df<B712FEA327037A8F34>0 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fd cmsy10 10 1
/Fd 1 3 df<0060150600F8150F6C151F007E153F6C157E6C6C14FC6C6CEB01F86C6CEB
03F06C6CEB07E06C6CEB0FC06C6CEB1F80017EEB3F006D137E6D6C5A90380FC1F8903807
E3F0903803F7E06DB45A6D5B6EC7FCA24A7E497F903803F7E0903807E3F090380FC1F890
381F80FC90383F007E017E7F49EB1F804848EB0FC04848EB07E04848EB03F04848EB01F8
4848EB00FC48C8127E007E153F48151F48150F00601506282874A841>2
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fe cmmi10 10 1
/Fe 1 82 df<4BB4FC031F13F09238FE01FC913903F0007EDA07C0EB1F80DA1F80EB0FC0
023EC7EA07E002FCEC03F0495A4948EC01F8495A4948EC00FC495A013F16FE49C9FC13FE
187F485A12035B12075B120F4916FF121FA2485AA34848ED01FEA448C9EA03FCA3EF07F8
A218F0170F18E0171F18C0EF3F807EEF7F0017FEDA07C05B6C90391FF001F89039803838
03001F496C485A9139E00C0FE0260FC0C0EB1F80D807E1D90E3FC7FC0280137ED803F1EB
07F8D801F95C3A007FC00FC0903A3FE07F0003903807FFFE0100018F5BDA000F1306170E
171E705A177CEEC1F816FF5FA25F5F6F5B6F48C7FCED00F8384B7CBA42>81
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Ff cmr7 7 8
/Ff 8 56 df<1238127C12FEA3127C123807077B8613>46 D<EB3F803801FFF03803E0F8
3807803C48487E001E7F003E1480A2003C1307007C14C0A400FC14E0AE007C14C0A36CEB
0F80A36CEB1F006C131E6C6C5A3803E0F86CB45A38003F801B277EA521>48
D<13381378EA01F8121F12FE12E01200B3AB487EB512F8A215267BA521>I<13FF000313
E0380E03F0381800F848137C48137E00787F12FC6CEB1F80A4127CC7FC15005C143E147E
147C5C495A495A5C495A010EC7FC5B5B903870018013E0EA0180390300030012065A001F
B5FC5A485BB5FCA219267DA521>I<13FF000313E0380F01F8381C007C0030137E003C13
3E007E133FA4123CC7123E147E147C5C495AEB07E03801FF8091C7FC380001E06D7E147C
80143F801580A21238127C12FEA21500485B0078133E00705B6C5B381F01F03807FFC0C6
90C7FC19277DA521>I<1438A2147814F81301A2130313071306130C131C131813301370
136013C012011380EA03005A120E120C121C5A12305A12E0B612E0A2C7EAF800A7497E90
383FFFE0A21B277EA621>I<0018130C001F137CEBFFF85C5C1480D819FCC7FC0018C8FC
A7137F3819FFE0381F81F0381E0078001C7F0018133EC7FC80A21580A21230127C12FCA3
150012F00060133E127000305B001C5B380F03E03803FFC0C648C7FC19277DA521>I<12
30123C003FB512E0A215C0481480A239700007000060130E140C48131C5C5CC75A5C1301
495AA249C7FC5B130E131EA3133E133CA2137CA413FCA813781B287DA621>55
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fg cmr10 10 16
/Fg 16 117 df<EB03F8EB1FFF90387E0FC09038F803E03901E000F0484813780007147C
48487FA248C77EA2481580A3007EEC0FC0A600FE15E0B3007E15C0A4007F141F6C1580A3
6C15006D5B000F143EA26C6C5B6C6C5B6C6C485A6C6C485A90387E0FC0D91FFFC7FCEB03
F8233A7DB72A>48 D<EB01C013031307131F13FFB5FCA2131F1200B3B3A8497E007FB512
F0A31C3879B72A>I<B712C016F816FE000190398001FF806C90C7EA3FC0EE0FE0EE07F0
EE03F817FC17FE1601A217FFA717FEA2EE03FCA2EE07F817F0EE0FE0EE3FC0923801FF00
91B512FC16F091C9FCB3A5487FB6FCA330397DB839>80 D<D90FF813C090383FFE0190B5
12813903F807E33907E000F74848137F4848133F48C7121F003E140F007E1407A2007C14
0312FC1501A36C1400A37E6D14006C7E7F13F86CB47E6C13F8ECFF806C14E06C14F86C14
FEC680013F1480010714C0EB007F020713E0EC007FED3FF0151F150FED07F8A200C01403
A21501A37EA216F07E15036C15E06C14076C15C06C140F6DEB1F80D8FBF0EB3F00D8F0FE
13FE39E03FFFF8010F13E0D8C00190C7FC253D7CBA2E>83 D<EB1FE0EBFFFC3803E03F39
07000F80390F8007E0486C6C7E13E06E7EA26E7E6C5A6C5AC8FCA4147FEB07FFEB3FE0EB
FE00EA03F8EA0FF0EA1FC0123F485A90C7FC160C12FEA31401A26C13036CEB077C903980
063E18383FC01E3A0FE0781FF03A03FFF00FE03A007F8007C026277DA52A>97
D<EB03FC90381FFF8090387E03E03901F80070484813F83907E001FC380FC003A2EA1F80
123F90380001F848EB00F01500A2127E12FEAA127E127FA26C14067F001F140E6D130C00
0F141C6C6C13386C6C13706C6C13E039007C07C090381FFF00EB07F81F277DA525>99
D<EB07F8EB1FFF90387C0FC03901F803E03903F001F0D807E013F8380FC0004848137CA2
48C7127E153E5A153F127E12FEA3B7FCA248C8FCA5127EA2127FA26C14037F001F14076C
6C13060007140E6D131CD801F013386C6C137090387E03E090381FFF80903803FC002027
7EA525>101 D<147E903803FF8090380FC1E0EB1F8790383F0FF0137EA213FCA23901F8
03C091C7FCADB512FCA3D801F8C7FCB3AB487E387FFFF8A31C3B7FBA19>I<ED03F09039
0FF00FF890393FFC3C3C9039F81F707C3901F00FE03903E007C03A07C003E010000FECF0
00A248486C7EA86C6C485AA200075C6C6C485A6D485A6D48C7FC38073FFC38060FF0000E
C9FCA4120FA213C06CB512C015F86C14FE6CECFF804815C03A0F80007FE048C7EA0FF000
3E140348140116F8481400A56C1401007C15F06CEC03E0003F1407D80F80EB0F80D807E0
EB3F003901FC01FC39007FFFF0010790C7FC26387EA52A>I<EA03F012FFA3120F1203B3
B3AD487EB512C0A3123A7EB917>108 D<2703F00FF0EB1FE000FFD93FFCEB7FF8913AF0
3F01E07E903BF1C01F83803F3D0FF3800FC7001F802603F70013CE01FE14DC49D907F8EB
0FC0A2495CA3495CB3A3486C496CEB1FE0B500C1B50083B5FCA340257EA445>I<3903F0
0FF000FFEB3FFCECF03F9039F1C01F803A0FF3800FC03803F70013FE496D7EA25BA35BB3
A3486C497EB500C1B51280A329257EA42E>I<3903F01FE000FFEB7FF89038F1E07E9039
F3801F803A07F7000FC0D803FEEB07E049EB03F04914F849130116FC150016FEA3167FAA
16FEA3ED01FCA26DEB03F816F06D13076DEB0FE001F614C09039F7803F009038F1E07E90
38F0FFF8EC1FC091C8FCAB487EB512C0A328357EA42E>112 D<3807E01F00FFEB7FC090
38E1E3E09038E387F0380FE707EA03E613EE9038EC03E09038FC0080491300A45BB3A248
7EB512F0A31C257EA421>114 D<EBFF03000313E7380F80FF381E003F487F487F00707F
12F0A2807EA27EB490C7FCEA7FE013FF6C13E06C13F86C7F00037FC67F01071380EB007F
141F00C0EB0FC01407A26C1303A37E15806C13077EEC0F00B4131E38F3C07C38E1FFF038
C03F801A277DA521>I<1318A51338A31378A313F8120112031207001FB5FCB6FCA2D801
F8C7FCB215C0A93800FC011580EB7C03017E13006D5AEB0FFEEB01F81A347FB220>I
E
%EndDVIPSBitmapFont
end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%BeginPaperSize: a4
a4
%%EndPaperSize

%%EndSetup
%%Page: 1 1
1 0 bop 747 1807 a
 /PSfrag where{pop(1)[[4(Bl)1 0]](2)[[1(Bl)1 0]](3)[[2(Bl)1 0]](4)[[3(Bl)1
0]](5)[[5(Bl)1 0]](2.5)[[6(Bl)1 0]](7.5)[[7(Bl)1 0]](10)[[8(Bl)1 0]](12.5)[[9(Bl)1
0]](15)[[10(Bl)1 0]](17.5)[[11(Bl)1 0]](20)[[12(Bl)1 0]](qlqqqqq)[[13(Bl)1
0]](qp)[[14(Bl)1 0]]14 0 -1/Begin PSfrag}{userdict /PSfrag{pop}put}ifelse
 747 1807 a @beginspecial 0 @llx 62
@lly 288 @urx 226 @ury 2880 @rwi @setspecial
%%BeginDocument: Q1000.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Mathematica-PSRender
%%BoundingBox: 0 62 288 226 
%%Pages: (atend)
%%DocumentNeededResources: (atend)
%%EndComments
%%BeginProlog
/setrgbcolor dup where
{ pop pop }
{ { .114 mul exch .587 mul add exch .299 mul add setgray } bind def }
ifelse
/C /curveto load def
/f /fill load def
/F { closepath fill } bind def
/L /lineto load def
/S /stroke load def
/s { closepath stroke } bind def
/d /setdash load def
/g /setgray load def
/m /moveto load def
/r /setrgbcolor load def
/w /setlinewidth load def
/b { gsave gsave F grestore 0 g S grestore newpath } bind def
/dot { newpath 0 360 arc fill } bind def
%%EndProlog
%%Page: 1 1 
0 g
0.25 w
1 setlinecap
1 setlinejoin
10. setmiterlimit
[ ] 0 d
63.341 86.8127 m
63.341 88.2183 L
S
54.4035 78.0638 m
%%IncludeResource: font Courier
/F0 /Courier findfont def
F0 10. scalefont setfont
(2.5) show
94.5782 86.8127 m
94.5782 88.2183 L
S
91.6719 78.0638 m
(5) show
125.815 86.8127 m
125.815 88.2183 L
S
116.878 78.0638 m
(7.5) show
157.05 86.8127 m
157.05 88.2183 L
S
150.894 78.0638 m
(10) show
188.287 86.8127 m
188.287 88.2183 L
S
176.131 78.0638 m
(12.5) show
219.525 86.8127 m
219.525 88.2183 L
S
213.368 78.0638 m
(15) show
250.762 86.8127 m
250.762 88.2183 L
S
238.605 78.0638 m
(17.5) show
281.999 86.8127 m
281.999 88.2183 L
S
276.061 78.0638 m
(20) show
0.125 w
69.5889 86.8127 m
69.5889 87.6561 L
S
75.8345 86.8127 m
75.8345 87.6561 L
S
82.0824 86.8127 m
82.0824 87.6561 L
S
88.3303 86.8127 m
88.3303 87.6561 L
S
100.824 86.8127 m
100.824 87.6561 L
S
107.072 86.8127 m
107.072 87.6561 L
S
113.32 86.8127 m
113.32 87.6561 L
S
119.567 86.8127 m
119.567 87.6561 L
S
132.061 86.8127 m
132.061 87.6561 L
S
138.309 86.8127 m
138.309 87.6561 L
S
144.557 86.8127 m
144.557 87.6561 L
S
150.805 86.8127 m
150.805 87.6561 L
S
163.298 86.8127 m
163.298 87.6561 L
S
169.546 86.8127 m
169.546 87.6561 L
S
175.794 86.8127 m
175.794 87.6561 L
S
182.042 86.8127 m
182.042 87.6561 L
S
194.535 86.8127 m
194.535 87.6561 L
S
200.783 86.8127 m
200.783 87.6561 L
S
207.031 86.8127 m
207.031 87.6561 L
S
213.277 86.8127 m
213.277 87.6561 L
S
225.772 86.8127 m
225.772 87.6561 L
S
232.02 86.8127 m
232.02 87.6561 L
S
238.268 86.8127 m
238.268 87.6561 L
S
244.514 86.8127 m
244.514 87.6561 L
S
257.01 86.8127 m
257.01 87.6561 L
S
263.257 86.8127 m
263.257 87.6561 L
S
269.503 86.8127 m
269.503 87.6561 L
S
275.751 86.8127 m
275.751 87.6561 L
S
0.25 w
57.0931 86.8127 m
281.999 86.8127 L
S
163.421 65.8763 m
(qp) show
57.0931 112.085 m
58.4988 112.085 L
S
49.0318 109.085 m
(1) show
57.0931 137.358 m
58.4988 137.358 L
S
49.4693 134.358 m
(2) show
57.0931 162.631 m
58.4988 162.631 L
S
49.4693 159.631 m
(3) show
57.0931 187.903 m
58.4988 187.903 L
S
49.8443 184.903 m
(4) show
57.0931 213.176 m
58.4988 213.176 L
S
49.4693 210.176 m
(5) show
0.125 w
57.0931 91.8663 m
57.9365 91.8663 L
S
57.0931 96.9199 m
57.9365 96.9199 L
S
57.0931 101.976 m
57.9365 101.976 L
S
57.0931 107.029 m
57.9365 107.029 L
S
57.0931 117.139 m
57.9365 117.139 L
S
57.0931 122.195 m
57.9365 122.195 L
S
57.0931 127.248 m
57.9365 127.248 L
S
57.0931 132.302 m
57.9365 132.302 L
S
57.0931 142.412 m
57.9365 142.412 L
S
57.0931 147.467 m
57.9365 147.467 L
S
57.0931 152.521 m
57.9365 152.521 L
S
57.0931 157.575 m
57.9365 157.575 L
S
57.0931 167.684 m
57.9365 167.684 L
S
57.0931 172.74 m
57.9365 172.74 L
S
57.0931 177.794 m
57.9365 177.794 L
S
57.0931 182.847 m
57.9365 182.847 L
S
57.0931 192.957 m
57.9365 192.957 L
S
57.0931 198.013 m
57.9365 198.013 L
S
57.0931 203.066 m
57.9365 203.066 L
S
57.0931 208.12 m
57.9365 208.12 L
S
57.0931 218.23 m
57.9365 218.23 L
S
57.0931 223.285 m
57.9365 223.285 L
S
0.25 w
57.0931 86.8127 m
57.0931 225.811 L
S
2.00114 153.594 m
(qlqqqqq) show
63.341 224.405 m
63.341 225.811 L
S
94.5782 224.405 m
94.5782 225.811 L
S
125.815 224.405 m
125.815 225.811 L
S
157.05 224.405 m
157.05 225.811 L
S
188.287 224.405 m
188.287 225.811 L
S
219.525 224.405 m
219.525 225.811 L
S
250.762 224.405 m
250.762 225.811 L
S
0.125 w
69.5889 224.968 m
69.5889 225.811 L
S
75.8345 224.968 m
75.8345 225.811 L
S
82.0824 224.968 m
82.0824 225.811 L
S
88.3303 224.968 m
88.3303 225.811 L
S
100.824 224.968 m
100.824 225.811 L
S
107.072 224.968 m
107.072 225.811 L
S
113.32 224.968 m
113.32 225.811 L
S
119.567 224.968 m
119.567 225.811 L
S
132.061 224.968 m
132.061 225.811 L
S
138.309 224.968 m
138.309 225.811 L
S
144.557 224.968 m
144.557 225.811 L
S
150.805 224.968 m
150.805 225.811 L
S
163.298 224.968 m
163.298 225.811 L
S
169.546 224.968 m
169.546 225.811 L
S
175.794 224.968 m
175.794 225.811 L
S
182.042 224.968 m
182.042 225.811 L
S
194.535 224.968 m
194.535 225.811 L
S
200.783 224.968 m
200.783 225.811 L
S
207.031 224.968 m
207.031 225.811 L
S
213.277 224.968 m
213.277 225.811 L
S
225.772 224.968 m
225.772 225.811 L
S
232.02 224.968 m
232.02 225.811 L
S
238.268 224.968 m
238.268 225.811 L
S
244.514 224.968 m
244.514 225.811 L
S
257.01 224.968 m
257.01 225.811 L
S
263.257 224.968 m
263.257 225.811 L
S
269.503 224.968 m
269.503 225.811 L
S
275.751 224.968 m
275.751 225.811 L
S
0.25 w
57.0931 225.811 m
281.999 225.811 L
S
280.593 112.085 m
281.999 112.085 L
S
280.593 137.358 m
281.999 137.358 L
S
280.593 162.631 m
281.999 162.631 L
S
280.593 187.903 m
281.999 187.903 L
S
280.593 213.176 m
281.999 213.176 L
S
0.125 w
281.155 91.8663 m
281.999 91.8663 L
S
281.155 96.9199 m
281.999 96.9199 L
S
281.155 101.976 m
281.999 101.976 L
S
281.155 107.029 m
281.999 107.029 L
S
281.155 117.139 m
281.999 117.139 L
S
281.155 122.195 m
281.999 122.195 L
S
281.155 127.248 m
281.999 127.248 L
S
281.155 132.302 m
281.999 132.302 L
S
281.155 142.412 m
281.999 142.412 L
S
281.155 147.467 m
281.999 147.467 L
S
281.155 152.521 m
281.999 152.521 L
S
281.155 157.575 m
281.999 157.575 L
S
281.155 167.684 m
281.999 167.684 L
S
281.155 172.74 m
281.999 172.74 L
S
281.155 177.794 m
281.999 177.794 L
S
281.155 182.847 m
281.999 182.847 L
S
281.155 192.957 m
281.999 192.957 L
S
281.155 198.013 m
281.999 198.013 L
S
281.155 203.066 m
281.999 203.066 L
S
281.155 208.12 m
281.999 208.12 L
S
281.155 218.23 m
281.999 218.23 L
S
281.155 223.285 m
281.999 223.285 L
S
0.25 w
281.999 86.8127 m
281.999 225.811 L
S
gsave
57.0931 86.8127 m
281.999 86.8127 L
281.999 225.811 L
57.0931 225.811 L
57.0931 86.8127 L
closepath clip newpath
0.5 w
[ 4.49811 2.24906 ] 0 d
69.5889 86.8194 m
82.0824 86.8554 L
94.5782 86.9566 L
107.072 87.186 L
119.567 87.6336 L
132.061 88.4095 L
144.557 89.6555 L
157.05 91.5312 L
169.546 94.2255 L
182.042 97.959 L
194.535 102.956 L
207.031 109.49 L
219.525 117.809 L
232.02 128.303 L
244.514 141.098 L
257.01 156.707 L
269.503 175.646 L
281.999 198.056 L
S
[ ] 0 d
69.5889 86.8172 m
82.0824 86.8464 L
94.5782 86.9431 L
107.072 87.1837 L
119.567 87.6785 L
132.061 88.5737 L
144.557 90.0513 L
157.05 92.3341 L
169.546 95.6627 L
182.042 100.327 L
194.535 106.654 L
207.031 114.993 L
219.525 125.726 L
232.02 139.267 L
244.514 156.059 L
257.01 176.575 L
269.503 201.308 L
S
269.503 201.308 m
279.889 225.811 L
S
grestore
showpage
%%PageTrailer
%%Trailer
%%Pages: 1 
%%DocumentNeededResources: font Courier
%%EOF

%%EndDocument
 @endspecial 747 1807 a
 /End PSfrag
 747 1807 a 747 204 a
 /Hide PSfrag
 747 204
a 7 262 a Fg(PSfrag)26 b(replacemen)n(ts)p 7 291 741
4 v 747 294 a
 /Unhide PSfrag
 747 294 a 714 394 a
  {
 714 394 a Ff(1)714
394 y
  } 0/Place PSfrag
 714 394 a 714 494 a
  {
 714 494 a Ff(2)714 494 y
  } 1/Place PSfrag
 714
494 a 714 593 a
  {
 714 593 a Ff(3)714 593 y
  } 2/Place PSfrag
 714 593 a 714
693 a
  {
 714 693 a Ff(4)714 693 y
  } 3/Place PSfrag
 714 693 a 714 792 a
  {
 714
792 a Ff(1)714 792 y
  } 4/Place PSfrag
 714 792 a 714 892 a
  {
 714 892 a Ff(5)714
892 y
  } 5/Place PSfrag
 714 892 a 662 992 a
  {
 662 992 a Ff(2.5)662 992 y
  } 6/Place PSfrag

662 992 a 662 1091 a
  {
 662 1091 a Ff(7.5)662 1091 y
  } 7/Place PSfrag
 662
1091 a 681 1191 a
  {
 681 1191 a Ff(10)681 1191 y
  } 8/Place PSfrag
 681 1191
a 629 1291 a
  {
 629 1291 a Ff(12.5)629 1291 y
  } 9/Place PSfrag
 629 1291 a
681 1390 a
  {
 681 1390 a Ff(15)681 1390 y
  } 10/Place PSfrag
 681 1390 a 629
1490 a
  {
 629 1490 a Ff(17.5)629 1490 y
  } 11/Place PSfrag
 629 1490 a 681 1589
a
  {
 681 1589 a Ff(20)681 1589 y
  } 12/Place PSfrag
 681 1589 a 375 1673 a
  {
 375
1673 a Fe(Q)18 b Fd(\002)g Fg(10)626 1643 y Fc(\000)p
Ff(23)375 1673 y
  } 13/Place PSfrag
 375 1673 a 636 1770 a
  {
 636 1770 a 667
1737 a Fb(T)p 646 1751 92 4 v 646 1798 a(m)705 1806 y
Fa(e)636 1770 y
  } 14/Place PSfrag
 636 1770 a eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
