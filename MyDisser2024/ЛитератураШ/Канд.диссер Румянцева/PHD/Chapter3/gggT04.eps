%!PS-Adobe-3.0 EPSF-3.0
%%Creator: dvips(k) 5.86 Copyright 1999 Radical Eye Software
%%Title: Pic4.dvi
%%CreationDate: Sat Mar 12 20:26:50 2005
%%Pages: 1
%%PageOrder: Ascend
%%BoundingBox: 165 552 453 716
%%DocumentFonts: Courier
%%DocumentPaperSizes: a4
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips Pic4.dvi
%DVIPSParameters: dpi=600, compressed
%DVIPSSource:  TeX output 2005.03.12:2026
%%BeginProcSet: texc.pro
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/id 0 N/rw 0 N/rc 0 N/gp 0 N/cp 0 N/G 0 N/CharBuilder{save 3
1 roll S A/base get 2 index get S/BitMaps get S get/Cd X pop/ctr 0 N Cdx
0 Cx Cy Ch sub Cx Cw add Cy setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx
sub Cy .1 sub]/id Ci N/rw Cw 7 add 8 idiv string N/rc 0 N/gp 0 N/cp 0 N{
rc 0 ne{rc 1 sub/rc X rw}{G}ifelse}imagemask restore}B/G{{id gp get/gp
gp 1 add N A 18 mod S 18 idiv pl S get exec}loop}B/adv{cp add/cp X}B
/chg{rw cp id gp 4 index getinterval putinterval A gp add/gp X adv}B/nd{
/cp 0 N rw exit}B/lsh{rw cp 2 copy get A 0 eq{pop 1}{A 255 eq{pop 254}{
A A add 255 and S 1 and or}ifelse}ifelse put 1 adv}B/rsh{rw cp 2 copy
get A 0 eq{pop 128}{A 255 eq{pop 127}{A 2 idiv S 128 and or}ifelse}
ifelse put 1 adv}B/clr{rw cp 2 index string putinterval adv}B/set{rw cp
fillstr 0 4 index getinterval putinterval adv}B/fillstr 18 string 0 1 17
{2 copy 255 put pop}for N/pl[{adv 1 chg}{adv 1 chg nd}{1 add chg}{1 add
chg nd}{adv lsh}{adv lsh nd}{adv rsh}{adv rsh nd}{1 add adv}{/rc X nd}{
1 add set}{1 add clr}{adv 2 chg}{adv 2 chg nd}{pop nd}]A{bind pop}
forall N/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: psfrag.pro
%%
%% This is file `psfrag.pro',
%% generated with the docstrip utility.
%%
%% The original source files were:
%%
%% psfrag.dtx  (with options: `filepro')
%% 
%% Copyright (c) 1996 Craig Barratt, Michael C. Grant, and David Carlisle.
%% All rights reserved.
%% 
%% This file is part of the PSfrag package.
%% 
userdict begin
/PSfragLib 90 dict def
/PSfragDict 6 dict def
/PSfrag { PSfragLib begin load exec end } bind def
end
PSfragLib begin
/RO /readonly      load def
/CP /currentpoint  load def
/CM /currentmatrix load def
/B { bind RO def } bind def
/X { exch def } B
/MD { { X } forall } B
/OE { end exec PSfragLib begin } B
/S false def
/tstr 8 string def
/islev2 { languagelevel } stopped { false } { 2 ge } ifelse def
[ /sM /tM /srcM /dstM /dM /idM /srcFM /dstFM ] { matrix def } forall
sM currentmatrix RO pop
dM defaultmatrix RO idM invertmatrix RO pop
srcFM identmatrix pop
/Hide { gsave { CP } stopped not newpath clip { moveto } if } B
/Unhide { { CP } stopped not grestore { moveto } if } B
/setrepl islev2 {{ /glob currentglobal def true setglobal array astore
                   globaldict exch /PSfrags exch put glob setglobal }}
                {{ array astore /PSfrags X }} ifelse B
/getrepl islev2 {{ globaldict /PSfrags get aload length }}
                {{ PSfrags aload length }} ifelse B
/convert {
   /src X src length string
   /c 0 def src length {
      dup c src c get dup 32 lt { pop 32 } if put /c c 1 add def
   } repeat
} B
/Begin {
    /saver save def
    srcFM exch 3 exch put
    0 ne /debugMode X 0 setrepl
    dup /S exch dict def { S 3 1 roll exch convert exch put } repeat
    srcM CM dup invertmatrix pop
    mark { currentdict { end } stopped { pop exit } if } loop
    PSfragDict counttomark { begin } repeat pop
} B
/End {
    mark { currentdict end dup PSfragDict eq { pop exit } if } loop
    counttomark { begin } repeat pop
    getrepl saver restore
    7 idiv dup /S exch dict def {
        6 array astore /mtrx X tstr cvs /K X
        S K [ S K known { S K get aload pop } if mtrx ] put
    } repeat
} B
/Place {
    tstr cvs /K X
    S K known {
        bind /proc X tM CM pop
        CP /cY X /cX X
        0 0 transform idtransform neg /aY X neg /aX X
        S K get dup length /maxiter X
        /iter 1 def {
            iter maxiter ne { /saver save def } if
            tM setmatrix aX aY translate
            [ exch aload pop idtransform ] concat
            cX neg cY neg translate cX cY moveto
            /proc load OE
            iter maxiter ne { saver restore /iter iter 1 add def } if
        } forall
        /noXY { CP /cY X /cX X } stopped def
        tM setmatrix noXY { newpath } { cX cY moveto } ifelse
    } {
        Hide OE Unhide
    } ifelse
} B
/normalize {
    2 index dup mul 2 index dup mul add sqrt div
    dup 4 -1 roll exch mul 3 1 roll mul
} B
/replace {
    aload pop MD
    CP /bY X /lX X gsave sM setmatrix
    str stringwidth abs exch abs add dup 0 eq
        { pop } { 360 exch div dup scale } ifelse
    lX neg bY neg translate newpath lX bY moveto
    str { /ch X ( ) dup 0 ch put false charpath ch Kproc } forall
    flattenpath pathbbox [ /uY /uX /lY /lX ] MD
    CP grestore moveto
    currentfont /FontMatrix get dstFM copy dup
    0 get 0 lt { uX lX /uX X /lX X } if
    3 get 0 lt { uY lY /uY X /lY X } if
    /cX uX lX add 0.5 mul def
    /cY uY lY add 0.5 mul def
    debugMode { gsave 0 setgray 1 setlinewidth
        lX lY moveto lX uY lineto uX uY lineto uX lY lineto closepath
        lX bY moveto uX bY lineto lX cY moveto uX cY lineto
        cX lY moveto cX uY lineto stroke
    grestore } if
    dstFM dup invertmatrix dstM CM srcM
    2 { dstM concatmatrix } repeat pop
    getrepl /temp X
        S str convert get {
            aload pop [ /rot /scl /loc /K ] MD
            /aX cX def /aY cY def
            loc {
                dup 66  eq { /aY bY def } { % B
                dup 98  eq { /aY lY def } { % b
                dup 108 eq { /aX lX def } { % l
                dup 114 eq { /aX uX def } { % r
                dup 116 eq { /aY uY def }   % t
                if } ifelse } ifelse } ifelse } ifelse pop
            } forall
            K srcFM rot tM rotate dstM
            2 { tM concatmatrix } repeat aload pop pop pop
            2 { scl normalize 4 2 roll } repeat
            aX aY transform
            /temp temp 7 add def
        } forall
    temp setrepl
} B
/Rif {
    S 3 index convert known { pop replace } { exch pop OE } ifelse
} B
/XA { bind [ /Kproc /str } B /XC { ] 2 array astore def } B
/xs   { pop } XA XC
/xks  { /kern load OE } XA /kern XC
/xas  { pop ax ay rmoveto } XA /ay /ax XC
/xws  { c eq { cx cy rmoveto } if } XA /c /cy /cx XC
/xaws { ax ay rmoveto c eq { cx cy rmoveto } if }
    XA /ay /ax /c /cy /cx XC
/raws { xaws { awidthshow } Rif } B
/rws  { xws { widthshow } Rif } B
/rks  { xks { kshow } Rif } B
/ras  { xas { ashow } Rif } B
/rs   { xs { show } Rif } B
/rrs { getrepl dup 2 add -1 roll //restore exec setrepl } B
PSfragDict begin
islev2 not { /restore { /rrs PSfrag } B } if
/show       { /rs   PSfrag } B
/kshow      { /rks  PSfrag } B
/ashow      { /ras  PSfrag } B
/widthshow  { /rws  PSfrag } B
/awidthshow { /raws PSfrag } B
end PSfragDict RO pop
end

%%EndProcSet
%%BeginProcSet: 8r.enc
% @@psencodingfile@{
%   author = "S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry",
%   version = "0.6",
%   date = "1 July 1998",
%   filename = "8r.enc",
%   email = "tex-fonts@@tug.org",
%   docstring = "Encoding for TrueType or Type 1 fonts
%                to be used with TeX."
% @}
% 
% Idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard Encoding + ISO Latin 1 + extra characters from Lucida.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% 
% (4) Remaining positions left undefined are for use in (hopefully)
% upward-compatible revisions, if someday more characters are generally
% available.
% 
% (5) hyphen appears twice for compatibility with both 
% ASCII and Windows.
% 
/TeXBase1Encoding [
% 0x00 (encoded characters from Adobe Standard not in Windows 3.1)
  /.notdef /dotaccent /fi /fl
  /fraction /hungarumlaut /Lslash /lslash
  /ogonek /ring /.notdef
  /breve /minus /.notdef 
% These are the only two remaining unencoded characters, so may as
% well include them.
  /Zcaron /zcaron 
% 0x10
 /caron /dotlessi 
% (unusual TeX characters available in, e.g., Lucida Bright)
 /dotlessj /ff /ffi /ffl 
 /.notdef /.notdef /.notdef /.notdef
 /.notdef /.notdef /.notdef /.notdef
 % very contentious; it's so painful not having quoteleft and quoteright
 % at 96 and 145 that we move the things normally found there to here.
 /grave /quotesingle 
% 0x20 (ASCII begins)
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three /four /five /six /seven
 /eight /nine /colon /semicolon /less /equal /greater /question
% 0x40
 /at /A /B /C /D /E /F /G /H /I /J /K /L /M /N /O
% 0x50
 /P /Q /R /S /T /U /V /W
 /X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c /d /e /f /g /h /i /j /k /l /m /n /o
% 0x70
 /p /q /r /s /t /u /v /w
 /x /y /z /braceleft /bar /braceright /asciitilde
 /.notdef % rubout; ASCII ends
% 0x80
 /.notdef /.notdef /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /.notdef /.notdef /.notdef
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /.notdef /.notdef /Ydieresis
% 0xA0
 /.notdef % nobreakspace
 /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot
 /hyphen % Y&Y (also at 45); Windows' softhyphen
 /registered
 /macron
% 0xD0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def

%%EndProcSet
%%BeginProcSet: special.pro
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/copypage{}N/p 3 def @MacSetUp}N/doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N/endTexFig{end psf$SavedState restore}N/@beginspecial{SDict
begin/SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count/ocount X/dcount countdictstack N}N/@setspecial{
CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if/showpage{}N/erasepage{}N/copypage{}N newpath}N
/@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{end}
repeat grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
TeXDict begin 39158280 55380996 1000 600 600 (Pic4.dvi)
@start
%DVIPSBitmapFont: Fa cmr7 7 1
/Fa 1 55 df<EB0FE0EB3FF8EBF81C3801E0063803C01F48485AEA0F005A121E003E131E
91C7FC5AA21304EB3FC038FCFFF038FDC078B4C67E143E48131E141FA2481480A4127CA4
003C1400123E001E131E143E6C133C6C6C5A3803C1F03801FFC06C6CC7FC19277DA521>
54 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fb cmsy7 7 1
/Fb 1 1 df<B712FEA327037A8F34>0 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fc cmsy10 10 1
/Fc 1 3 df<0060150600F8150F6C151F007E153F6C157E6C6C14FC6C6CEB01F86C6CEB
03F06C6CEB07E06C6CEB0FC06C6CEB1F80017EEB3F006D137E6D6C5A90380FC1F8903807
E3F0903803F7E06DB45A6D5B6EC7FCA24A7E497F903803F7E0903807E3F090380FC1F890
381F80FC90383F007E017E7F49EB1F804848EB0FC04848EB07E04848EB03F04848EB01F8
4848EB00FC48C8127E007E153F48151F48150F00601506282874A841>2
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fd cmr5 5 1
/Fd 1 49 df<EA01FCEA07FF380F0780381C01C0383800E0A2007813F000701370A200F0
1378AB00701370A2007813F0003813E0A2381C01C0380F07803807FF00EA01FC151D7D9B
1C>48 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fe cmmi7 7 3
/Fe 3 110 df<000FB712E05A9039800FE007D81E009038C001C05A0038011F13001230
00705C00601501023F148012E0481400A2C74890C7FCA2147EA214FEA25CA21301A25CA2
1303A25CA21307A25CA2130FA25CA2131F001FB57EA22B287DA727>84
D<B590B5EB3FFCA2D80FE0D90FE0EB07E0F003C019800007EF070003071406030F5CA203
1F5CA203375C03775C6D1367DBC7F05B1203DA0183495A02034AC7FC150302061406A202
0C5C021C5CEBF818000101306D5A030113700260146002E05C14C0D9F980EBF98016FBD9
FB0091C8FC01FE14FEA26C485C1500495C495CA2495C5E3E297BA73E>87
D<3B07801FC007E03B0FE07FF01FF83B18F0E0F8783C3B30F1807CE03E903AFB007D801E
D860FEEB3F005B49133E00C14A133E5B1201A24848495BA35F4848485A1830EE01F0A23C
0F8003E003E060A218C0933801E180271F0007C013E3933800FF00000E6D48137C341B7D
993B>109 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Ff cmr8 8 9
/Ff 9 56 df<123C127E12FFA4127E123C08087A8714>46 D<EB3FC0EBFFF03803E07C48
487E48487E497E001EEB0780A2003E14C0A248EB03E0A500FC14F0B0007C14E0A3007E13
07003E14C0A36CEB0F806C14006D5A3807C03E3803F0FC3800FFF0EB3FC01C2D7DAB23>
48 D<130C133C137CEA03FC12FFEAFC7C1200B3B113FE387FFFFEA2172C7AAB23>I<EB7F
803801FFF0380780FC380E003F48EB1F8048EB0FC05A0060EB07E012F000FC14F07E1403
A3007C1307C7FCA215E0140F15C0141F1580EC3F00147E147C5C495A495A495A495A011E
C7FC5B5B4913305B485A4848136048C7FC000E14E0001FB5FC5A4814C0B6FCA21C2C7DAB
23>I<EB3FC03801FFF03807C0FC380E007E487FEC1F80003F14C0A2EB800F1300A2000C
131FC7FC1580A2EC3F00143E5C5CEB03F0EBFFC014F0EB00FC143FEC1F8015C0140F15E0
A2EC07F0A21238127C12FEA3EC0FE012F8006014C00070131F6C1480001EEB3F00380780
FC3801FFF038007FC01C2D7DAB23>I<140EA2141E143EA2147E14FEA2EB01BE1303143E
1306130E130C131813381330136013E013C0EA0180120313001206120E120C5A12381230
5A12E0B612FCA2C7EA3E00A9147F90381FFFFCA21E2D7EAC23>I<000CEB0180380FC01F
90B512005C5C14F014C0D80C7EC7FC90C8FCA8EB1FC0EB7FF8380DE07C380F801F010013
80000E130F000CEB07C0C713E0A2140315F0A4127812FCA448EB07E012E0006014C00070
130F6C14806CEB1F006C133E380780F83801FFE038007F801C2D7DAB23>I<EB03F8EB0F
FE90383E0780EBF8013901F007C03803E00FEA07C0EA0F80A2391F00078091C7FC123EA2
127EA2127CEB0FC038FC3FF0EBF07C38FDC01EB4487E01001380EC07C04814E0A2140348
14F0A4127CA3127EA2003E14E01407121E001F14C06CEB0F803907801F003803C03E6C6C
5A38007FF0EB1FC01C2D7DAB23>I<1230123C003FB512F8A215F05A15E039700001C000
601480140348EB0700140E140CC7121C5C143014705C495AA2495AA249C7FCA25B130E13
1EA2133EA3133C137CA413FCA913781D2E7CAC23>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fg cmr10 10 16
/Fg 16 117 df<EB03F8EB1FFF90387E0FC09038F803E03901E000F0484813780007147C
48487FA248C77EA2481580A3007EEC0FC0A600FE15E0B3007E15C0A4007F141F6C1580A3
6C15006D5B000F143EA26C6C5B6C6C5B6C6C485A6C6C485A90387E0FC0D91FFFC7FCEB03
F8233A7DB72A>48 D<EB01C013031307131F13FFB5FCA2131F1200B3B3A8497E007FB512
F0A31C3879B72A>I<B712C016F816FE000190398001FF806C90C7EA3FC0EE0FE0EE07F0
EE03F817FC17FE1601A217FFA717FEA2EE03FCA2EE07F817F0EE0FE0EE3FC0923801FF00
91B512FC16F091C9FCB3A5487FB6FCA330397DB839>80 D<D90FF813C090383FFE0190B5
12813903F807E33907E000F74848137F4848133F48C7121F003E140F007E1407A2007C14
0312FC1501A36C1400A37E6D14006C7E7F13F86CB47E6C13F8ECFF806C14E06C14F86C14
FEC680013F1480010714C0EB007F020713E0EC007FED3FF0151F150FED07F8A200C01403
A21501A37EA216F07E15036C15E06C14076C15C06C140F6DEB1F80D8FBF0EB3F00D8F0FE
13FE39E03FFFF8010F13E0D8C00190C7FC253D7CBA2E>83 D<EB1FE0EBFFFC3803E03F39
07000F80390F8007E0486C6C7E13E06E7EA26E7E6C5A6C5AC8FCA4147FEB07FFEB3FE0EB
FE00EA03F8EA0FF0EA1FC0123F485A90C7FC160C12FEA31401A26C13036CEB077C903980
063E18383FC01E3A0FE0781FF03A03FFF00FE03A007F8007C026277DA52A>97
D<EB03FC90381FFF8090387E03E03901F80070484813F83907E001FC380FC003A2EA1F80
123F90380001F848EB00F01500A2127E12FEAA127E127FA26C14067F001F140E6D130C00
0F141C6C6C13386C6C13706C6C13E039007C07C090381FFF00EB07F81F277DA525>99
D<EB07F8EB1FFF90387C0FC03901F803E03903F001F0D807E013F8380FC0004848137CA2
48C7127E153E5A153F127E12FEA3B7FCA248C8FCA5127EA2127FA26C14037F001F14076C
6C13060007140E6D131CD801F013386C6C137090387E03E090381FFF80903803FC002027
7EA525>101 D<147E903803FF8090380FC1E0EB1F8790383F0FF0137EA213FCA23901F8
03C091C7FCADB512FCA3D801F8C7FCB3AB487E387FFFF8A31C3B7FBA19>I<ED03F09039
0FF00FF890393FFC3C3C9039F81F707C3901F00FE03903E007C03A07C003E010000FECF0
00A248486C7EA86C6C485AA200075C6C6C485A6D485A6D48C7FC38073FFC38060FF0000E
C9FCA4120FA213C06CB512C015F86C14FE6CECFF804815C03A0F80007FE048C7EA0FF000
3E140348140116F8481400A56C1401007C15F06CEC03E0003F1407D80F80EB0F80D807E0
EB3F003901FC01FC39007FFFF0010790C7FC26387EA52A>I<EA03F012FFA3120F1203B3
B3AD487EB512C0A3123A7EB917>108 D<2703F00FF0EB1FE000FFD93FFCEB7FF8913AF0
3F01E07E903BF1C01F83803F3D0FF3800FC7001F802603F70013CE01FE14DC49D907F8EB
0FC0A2495CA3495CB3A3486C496CEB1FE0B500C1B50083B5FCA340257EA445>I<3903F0
0FF000FFEB3FFCECF03F9039F1C01F803A0FF3800FC03803F70013FE496D7EA25BA35BB3
A3486C497EB500C1B51280A329257EA42E>I<3903F01FE000FFEB7FF89038F1E07E9039
F3801F803A07F7000FC0D803FEEB07E049EB03F04914F849130116FC150016FEA3167FAA
16FEA3ED01FCA26DEB03F816F06D13076DEB0FE001F614C09039F7803F009038F1E07E90
38F0FFF8EC1FC091C8FCAB487EB512C0A328357EA42E>112 D<3807E01F00FFEB7FC090
38E1E3E09038E387F0380FE707EA03E613EE9038EC03E09038FC0080491300A45BB3A248
7EB512F0A31C257EA421>114 D<EBFF03000313E7380F80FF381E003F487F487F00707F
12F0A2807EA27EB490C7FCEA7FE013FF6C13E06C13F86C7F00037FC67F01071380EB007F
141F00C0EB0FC01407A26C1303A37E15806C13077EEC0F00B4131E38F3C07C38E1FFF038
C03F801A277DA521>I<1318A51338A31378A313F8120112031207001FB5FCB6FCA2D801
F8C7FCB215C0A93800FC011580EB7C03017E13006D5AEB0FFEEB01F81A347FB220>I
E
%EndDVIPSBitmapFont
end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%BeginPaperSize: a4
a4
%%EndPaperSize

%%EndSetup
%%Page: 1 1
1 0 bop 747 1823 a
 /PSfrag where{pop(2)[[0(Bl)1 0]](3)[[1(Bl)1 0]](4)[[2(Bl)1 0]](5)[[3(Bl)1
0]](6)[[4(Bl)1 0]](7.5)[[5(Bl)1 0]](10)[[6(Bl)1 0]](12.5)[[7(Bl)1 0]](15)[[8(Bl)1
0]](17.5)[[9(Bl)1 0]](20)[[10(Bl)1 0]](qlqqqqqq)[[11(Bl)1 0]](qp)[[12(Bl)1
0]]13 0 -1/Begin PSfrag}{userdict /PSfrag{pop}put}ifelse
 747 1823 a @beginspecial 0 @llx 61
@lly 288 @urx 227 @ury 2880 @rwi @setspecial
%%BeginDocument: gggT04.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Mathematica-PSRender
%%BoundingBox: 0 61 288 227 
%%Pages: (atend)
%%DocumentNeededResources: (atend)
%%EndComments
%%BeginProlog
/setrgbcolor dup where
{ pop pop }
{ { .114 mul exch .587 mul add exch .299 mul add setgray } bind def }
ifelse
/C /curveto load def
/f /fill load def
/F { closepath fill } bind def
/L /lineto load def
/S /stroke load def
/s { closepath stroke } bind def
/d /setdash load def
/g /setgray load def
/m /moveto load def
/r /setrgbcolor load def
/w /setlinewidth load def
/b { gsave gsave F grestore 0 g S grestore newpath } bind def
/dot { newpath 0 360 arc fill } bind def
%%EndProlog
%%Page: 1 1 
0 g
0.25 w
1 setlinecap
1 setlinejoin
10. setmiterlimit
[ ] 0 d
83.005 86.3829 m
83.005 87.751 L
S
80.0987 77.7093 m
%%IncludeResource: font Courier
/F0 /Courier findfont def
F0 10. scalefont setfont
(5) show
116.17 86.3829 m
116.17 87.751 L
S
107.232 77.7093 m
(7.5) show
149.336 86.3829 m
149.336 87.751 L
S
143.18 77.7093 m
(10) show
182.501 86.3829 m
182.501 87.751 L
S
170.345 77.7093 m
(12.5) show
215.668 86.3829 m
215.668 87.751 L
S
209.511 77.7093 m
(15) show
248.832 86.3829 m
248.832 87.751 L
S
236.676 77.7093 m
(17.5) show
281.999 86.3829 m
281.999 87.751 L
S
276.061 77.7093 m
(20) show
0.125 w
89.6375 86.3829 m
89.6375 87.2038 L
S
96.2721 86.3829 m
96.2721 87.2038 L
S
102.905 86.3829 m
102.905 87.2038 L
S
109.537 86.3829 m
109.537 87.2038 L
S
122.804 86.3829 m
122.804 87.2038 L
S
129.437 86.3829 m
129.437 87.2038 L
S
136.069 86.3829 m
136.069 87.2038 L
S
142.704 86.3829 m
142.704 87.2038 L
S
155.969 86.3829 m
155.969 87.2038 L
S
162.603 86.3829 m
162.603 87.2038 L
S
169.236 86.3829 m
169.236 87.2038 L
S
175.868 86.3829 m
175.868 87.2038 L
S
189.136 86.3829 m
189.136 87.2038 L
S
195.768 86.3829 m
195.768 87.2038 L
S
202.4 86.3829 m
202.4 87.2038 L
S
209.035 86.3829 m
209.035 87.2038 L
S
222.3 86.3829 m
222.3 87.2038 L
S
228.935 86.3829 m
228.935 87.2038 L
S
235.567 86.3829 m
235.567 87.2038 L
S
242.2 86.3829 m
242.2 87.2038 L
S
255.467 86.3829 m
255.467 87.2038 L
S
262.099 86.3829 m
262.099 87.2038 L
S
268.732 86.3829 m
268.732 87.2038 L
S
275.366 86.3829 m
275.366 87.2038 L
S
76.3725 86.3829 m
76.3725 87.2038 L
S
69.7378 86.3829 m
69.7378 87.2038 L
S
0.25 w
63.1054 86.3829 m
281.999 86.3829 L
S
166.427 65.5218 m
(qp) show
63.1054 113.44 m
64.4735 113.44 L
S
55.5567 110.44 m
(2) show
63.1054 140.496 m
64.4735 140.496 L
S
55.5567 137.496 m
(3) show
63.1054 167.553 m
64.4735 167.553 L
S
55.9317 164.553 m
(4) show
63.1054 194.61 m
64.4735 194.61 L
S
55.5567 191.61 m
(5) show
63.1054 221.666 m
64.4735 221.666 L
S
55.5567 218.666 m
(6) show
0.125 w
63.1054 91.794 m
63.9262 91.794 L
S
63.1054 97.205 m
63.9262 97.205 L
S
63.1054 102.616 m
63.9262 102.616 L
S
63.1054 108.029 m
63.9262 108.029 L
S
63.1054 118.851 m
63.9262 118.851 L
S
63.1054 124.262 m
63.9262 124.262 L
S
63.1054 129.674 m
63.9262 129.674 L
S
63.1054 135.085 m
63.9262 135.085 L
S
63.1054 145.907 m
63.9262 145.907 L
S
63.1054 151.32 m
63.9262 151.32 L
S
63.1054 156.731 m
63.9262 156.731 L
S
63.1054 162.142 m
63.9262 162.142 L
S
63.1054 172.964 m
63.9262 172.964 L
S
63.1054 178.375 m
63.9262 178.375 L
S
63.1054 183.786 m
63.9262 183.786 L
S
63.1054 189.199 m
63.9262 189.199 L
S
63.1054 200.022 m
63.9262 200.022 L
S
63.1054 205.433 m
63.9262 205.433 L
S
63.1054 210.844 m
63.9262 210.844 L
S
63.1054 216.255 m
63.9262 216.255 L
S
0.25 w
63.1054 86.3829 m
63.1054 221.666 L
S
2.00111 151.307 m
(qlqqqqqq) show
83.005 220.298 m
83.005 221.666 L
S
116.17 220.298 m
116.17 221.666 L
S
149.336 220.298 m
149.336 221.666 L
S
182.501 220.298 m
182.501 221.666 L
S
215.668 220.298 m
215.668 221.666 L
S
248.832 220.298 m
248.832 221.666 L
S
0.125 w
89.6375 220.845 m
89.6375 221.666 L
S
96.2721 220.845 m
96.2721 221.666 L
S
102.905 220.845 m
102.905 221.666 L
S
109.537 220.845 m
109.537 221.666 L
S
122.804 220.845 m
122.804 221.666 L
S
129.437 220.845 m
129.437 221.666 L
S
136.069 220.845 m
136.069 221.666 L
S
142.704 220.845 m
142.704 221.666 L
S
155.969 220.845 m
155.969 221.666 L
S
162.603 220.845 m
162.603 221.666 L
S
169.236 220.845 m
169.236 221.666 L
S
175.868 220.845 m
175.868 221.666 L
S
189.136 220.845 m
189.136 221.666 L
S
195.768 220.845 m
195.768 221.666 L
S
202.4 220.845 m
202.4 221.666 L
S
209.035 220.845 m
209.035 221.666 L
S
222.3 220.845 m
222.3 221.666 L
S
228.935 220.845 m
228.935 221.666 L
S
235.567 220.845 m
235.567 221.666 L
S
242.2 220.845 m
242.2 221.666 L
S
255.467 220.845 m
255.467 221.666 L
S
262.099 220.845 m
262.099 221.666 L
S
268.732 220.845 m
268.732 221.666 L
S
275.366 220.845 m
275.366 221.666 L
S
76.3725 220.845 m
76.3725 221.666 L
S
69.7378 220.845 m
69.7378 221.666 L
S
0.25 w
63.1054 221.666 m
281.999 221.666 L
S
280.631 86.3829 m
281.999 86.3829 L
S
280.631 113.44 m
281.999 113.44 L
S
280.631 140.496 m
281.999 140.496 L
S
280.631 167.553 m
281.999 167.553 L
S
280.631 194.61 m
281.999 194.61 L
S
0.125 w
281.178 91.794 m
281.999 91.794 L
S
281.178 97.205 m
281.999 97.205 L
S
281.178 102.616 m
281.999 102.616 L
S
281.178 108.029 m
281.999 108.029 L
S
281.178 118.851 m
281.999 118.851 L
S
281.178 124.262 m
281.999 124.262 L
S
281.178 129.674 m
281.999 129.674 L
S
281.178 135.085 m
281.999 135.085 L
S
281.178 145.907 m
281.999 145.907 L
S
281.178 151.32 m
281.999 151.32 L
S
281.178 156.731 m
281.999 156.731 L
S
281.178 162.142 m
281.999 162.142 L
S
281.178 172.964 m
281.999 172.964 L
S
281.178 178.375 m
281.999 178.375 L
S
281.178 183.786 m
281.999 183.786 L
S
281.178 189.199 m
281.999 189.199 L
S
281.178 200.022 m
281.999 200.022 L
S
281.178 205.433 m
281.999 205.433 L
S
281.178 210.844 m
281.999 210.844 L
S
281.178 216.255 m
281.999 216.255 L
S
0.25 w
281.999 86.3829 m
281.999 221.666 L
S
gsave
63.1054 86.3829 m
281.999 86.3829 L
281.999 221.666 L
63.1054 221.666 L
63.1054 86.3829 L
closepath clip newpath
0.5 w
64.2743 86.3829 m
64.4319 89.2723 L
65.7584 110.654 L
67.0849 124.619 L
68.4113 135.323 L
69.7378 143.895 L
71.0643 151.132 L
79.0255 195.046 L
80.352 200.092 L
81.6785 203.968 L
83.005 206.963 L
84.3315 209.399 L
85.658 211.255 L
86.9845 212.619 L
88.311 213.571 L
89.6375 214.175 L
90.964 214.567 L
92.2904 214.806 L
93.6169 214.983 L
94.9434 214.891 L
96.2721 214.598 L
97.5986 214.195 L
98.9251 213.672 L
100.252 213.043 L
101.578 212.328 L
102.905 211.544 L
104.231 210.73 L
105.558 209.87 L
106.884 208.972 L
108.211 208.044 L
109.537 207.094 L
110.864 206.142 L
112.19 205.181 L
113.517 204.211 L
114.843 203.237 L
116.17 202.265 L
117.496 201.304 L
118.825 200.348 L
120.151 199.4 L
121.478 198.459 L
122.804 197.528 L
124.131 196.616 L
125.457 195.714 L
126.784 194.825 L
128.11 193.949 L
129.437 193.087 L
130.763 192.242 L
132.09 191.412 L
133.416 190.596 L
134.743 189.797 L
S
134.743 189.797 m
136.069 189.011 L
137.396 188.241 L
138.722 187.485 L
140.051 186.746 L
141.377 186.021 L
142.704 185.31 L
144.03 184.614 L
149.336 181.965 L
155.969 178.951 L
162.603 176.221 L
169.236 173.756 L
175.868 171.517 L
182.501 169.484 L
189.136 167.632 L
195.768 165.938 L
202.4 164.386 L
209.035 162.963 L
215.668 161.654 L
222.3 160.446 L
228.935 159.331 L
235.567 158.3 L
242.2 157.344 L
248.832 156.457 L
255.467 155.632 L
262.099 154.864 L
268.732 154.15 L
275.366 153.483 L
281.999 152.861 L
S
63.1054 143.829 m
71.9859 143.829 L
81.6697 143.829 L
90.7648 143.829 L
99.5117 143.829 L
108.821 143.829 L
117.785 143.829 L
127.309 143.829 L
136.487 143.829 L
145.315 143.829 L
154.708 143.829 L
163.753 143.829 L
172.449 143.829 L
181.708 143.829 L
190.62 143.829 L
200.096 143.829 L
209.221 143.829 L
217.999 143.829 L
227.341 143.829 L
236.336 143.829 L
245.892 143.829 L
255.101 143.829 L
263.962 143.829 L
273.385 143.829 L
281.999 143.829 L
S
grestore
showpage
%%PageTrailer
%%Trailer
%%Pages: 1 
%%DocumentNeededResources: font Courier
%%EOF

%%EndDocument
 @endspecial 747 1823 a
 /End PSfrag
 747 1823 a 747 420 a
 /Hide PSfrag
 747 420
a 7 477 a Fg(PSfrag)26 b(replacemen)n(ts)p 7 507 741
4 v 747 510 a
 /Unhide PSfrag
 747 510 a 712 610 a
  {
 712 610 a Ff(2)712
610 y
  } 0/Place PSfrag
 712 610 a 712 709 a
  {
 712 709 a Ff(3)712 709 y
  } 1/Place PSfrag
 712
709 a 712 809 a
  {
 712 809 a Ff(4)712 809 y
  } 2/Place PSfrag
 712 809 a 712
909 a
  {
 712 909 a Ff(5)712 909 y
  } 3/Place PSfrag
 712 909 a 712 1008 a
  {
 712
1008 a Ff(6)712 1008 y
  } 4/Place PSfrag
 712 1008 a 657 1108 a
  {
 657 1108
a Ff(7.5)657 1108 y
  } 5/Place PSfrag
 657 1108 a 676 1208 a
  {
 676 1208 a
Ff(10)676 1208 y
  } 6/Place PSfrag
 676 1208 a 621 1307 a
  {
 621 1307 a Ff(12.5)621
1307 y
  } 7/Place PSfrag
 621 1307 a 629 1407 a
  {
 629 1407 a 47 w Ff(15)629
1407 y
  } 8/Place PSfrag
 629 1407 a 621 1506 a
  {
 621 1506 a Ff(17.5)621 1506
y
  } 9/Place PSfrag
 621 1506 a 629 1606 a
  {
 629 1606 a 47 w Ff(20)629 1606
y
  } 10/Place PSfrag
 629 1606 a 358 1687 a
  {
 358 1687 a 380 1654 a Fe(W)p
368 1668 95 4 v 368 1715 a(W)430 1723 y Fd(0)492 1687
y Fc(\002)18 b Fg(10)659 1657 y Fb(\000)p Fa(6)358 1687
y
  } 11/Place PSfrag
 358 1687 a 668 1795 a
  {
 668 1795 a 678 1762 a Fe(m)p
678 1776 59 4 v 683 1823 a(T)668 1795 y
  } 12/Place PSfrag
 668 1795 a eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
