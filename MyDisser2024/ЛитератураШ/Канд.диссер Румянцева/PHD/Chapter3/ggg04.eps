%!PS-Adobe-3.0 EPSF-3.0
%%Creator: dvips(k) 5.86 Copyright 1999 Radical Eye Software
%%Title: pic48.dvi
%%CreationDate: Thu May 12 21:22:13 2005
%%Pages: 1
%%PageOrder: Ascend
%%BoundingBox: 164 540 444 714
%%DocumentFonts: Courier
%%DocumentPaperSizes: a4
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips pic48.dvi
%DVIPSParameters: dpi=600, compressed
%DVIPSSource:  TeX output 2005.05.12:2122
%%BeginProcSet: texc.pro
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/id 0 N/rw 0 N/rc 0 N/gp 0 N/cp 0 N/G 0 N/CharBuilder{save 3
1 roll S A/base get 2 index get S/BitMaps get S get/Cd X pop/ctr 0 N Cdx
0 Cx Cy Ch sub Cx Cw add Cy setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx
sub Cy .1 sub]/id Ci N/rw Cw 7 add 8 idiv string N/rc 0 N/gp 0 N/cp 0 N{
rc 0 ne{rc 1 sub/rc X rw}{G}ifelse}imagemask restore}B/G{{id gp get/gp
gp 1 add N A 18 mod S 18 idiv pl S get exec}loop}B/adv{cp add/cp X}B
/chg{rw cp id gp 4 index getinterval putinterval A gp add/gp X adv}B/nd{
/cp 0 N rw exit}B/lsh{rw cp 2 copy get A 0 eq{pop 1}{A 255 eq{pop 254}{
A A add 255 and S 1 and or}ifelse}ifelse put 1 adv}B/rsh{rw cp 2 copy
get A 0 eq{pop 128}{A 255 eq{pop 127}{A 2 idiv S 128 and or}ifelse}
ifelse put 1 adv}B/clr{rw cp 2 index string putinterval adv}B/set{rw cp
fillstr 0 4 index getinterval putinterval adv}B/fillstr 18 string 0 1 17
{2 copy 255 put pop}for N/pl[{adv 1 chg}{adv 1 chg nd}{1 add chg}{1 add
chg nd}{adv lsh}{adv lsh nd}{adv rsh}{adv rsh nd}{1 add adv}{/rc X nd}{
1 add set}{1 add clr}{adv 2 chg}{adv 2 chg nd}{pop nd}]A{bind pop}
forall N/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: psfrag.pro
%%
%% This is file `psfrag.pro',
%% generated with the docstrip utility.
%%
%% The original source files were:
%%
%% psfrag.dtx  (with options: `filepro')
%% 
%% Copyright (c) 1996 Craig Barratt, Michael C. Grant, and David Carlisle.
%% All rights reserved.
%% 
%% This file is part of the PSfrag package.
%% 
userdict begin
/PSfragLib 90 dict def
/PSfragDict 6 dict def
/PSfrag { PSfragLib begin load exec end } bind def
end
PSfragLib begin
/RO /readonly      load def
/CP /currentpoint  load def
/CM /currentmatrix load def
/B { bind RO def } bind def
/X { exch def } B
/MD { { X } forall } B
/OE { end exec PSfragLib begin } B
/S false def
/tstr 8 string def
/islev2 { languagelevel } stopped { false } { 2 ge } ifelse def
[ /sM /tM /srcM /dstM /dM /idM /srcFM /dstFM ] { matrix def } forall
sM currentmatrix RO pop
dM defaultmatrix RO idM invertmatrix RO pop
srcFM identmatrix pop
/Hide { gsave { CP } stopped not newpath clip { moveto } if } B
/Unhide { { CP } stopped not grestore { moveto } if } B
/setrepl islev2 {{ /glob currentglobal def true setglobal array astore
                   globaldict exch /PSfrags exch put glob setglobal }}
                {{ array astore /PSfrags X }} ifelse B
/getrepl islev2 {{ globaldict /PSfrags get aload length }}
                {{ PSfrags aload length }} ifelse B
/convert {
   /src X src length string
   /c 0 def src length {
      dup c src c get dup 32 lt { pop 32 } if put /c c 1 add def
   } repeat
} B
/Begin {
    /saver save def
    srcFM exch 3 exch put
    0 ne /debugMode X 0 setrepl
    dup /S exch dict def { S 3 1 roll exch convert exch put } repeat
    srcM CM dup invertmatrix pop
    mark { currentdict { end } stopped { pop exit } if } loop
    PSfragDict counttomark { begin } repeat pop
} B
/End {
    mark { currentdict end dup PSfragDict eq { pop exit } if } loop
    counttomark { begin } repeat pop
    getrepl saver restore
    7 idiv dup /S exch dict def {
        6 array astore /mtrx X tstr cvs /K X
        S K [ S K known { S K get aload pop } if mtrx ] put
    } repeat
} B
/Place {
    tstr cvs /K X
    S K known {
        bind /proc X tM CM pop
        CP /cY X /cX X
        0 0 transform idtransform neg /aY X neg /aX X
        S K get dup length /maxiter X
        /iter 1 def {
            iter maxiter ne { /saver save def } if
            tM setmatrix aX aY translate
            [ exch aload pop idtransform ] concat
            cX neg cY neg translate cX cY moveto
            /proc load OE
            iter maxiter ne { saver restore /iter iter 1 add def } if
        } forall
        /noXY { CP /cY X /cX X } stopped def
        tM setmatrix noXY { newpath } { cX cY moveto } ifelse
    } {
        Hide OE Unhide
    } ifelse
} B
/normalize {
    2 index dup mul 2 index dup mul add sqrt div
    dup 4 -1 roll exch mul 3 1 roll mul
} B
/replace {
    aload pop MD
    CP /bY X /lX X gsave sM setmatrix
    str stringwidth abs exch abs add dup 0 eq
        { pop } { 360 exch div dup scale } ifelse
    lX neg bY neg translate newpath lX bY moveto
    str { /ch X ( ) dup 0 ch put false charpath ch Kproc } forall
    flattenpath pathbbox [ /uY /uX /lY /lX ] MD
    CP grestore moveto
    currentfont /FontMatrix get dstFM copy dup
    0 get 0 lt { uX lX /uX X /lX X } if
    3 get 0 lt { uY lY /uY X /lY X } if
    /cX uX lX add 0.5 mul def
    /cY uY lY add 0.5 mul def
    debugMode { gsave 0 setgray 1 setlinewidth
        lX lY moveto lX uY lineto uX uY lineto uX lY lineto closepath
        lX bY moveto uX bY lineto lX cY moveto uX cY lineto
        cX lY moveto cX uY lineto stroke
    grestore } if
    dstFM dup invertmatrix dstM CM srcM
    2 { dstM concatmatrix } repeat pop
    getrepl /temp X
        S str convert get {
            aload pop [ /rot /scl /loc /K ] MD
            /aX cX def /aY cY def
            loc {
                dup 66  eq { /aY bY def } { % B
                dup 98  eq { /aY lY def } { % b
                dup 108 eq { /aX lX def } { % l
                dup 114 eq { /aX uX def } { % r
                dup 116 eq { /aY uY def }   % t
                if } ifelse } ifelse } ifelse } ifelse pop
            } forall
            K srcFM rot tM rotate dstM
            2 { tM concatmatrix } repeat aload pop pop pop
            2 { scl normalize 4 2 roll } repeat
            aX aY transform
            /temp temp 7 add def
        } forall
    temp setrepl
} B
/Rif {
    S 3 index convert known { pop replace } { exch pop OE } ifelse
} B
/XA { bind [ /Kproc /str } B /XC { ] 2 array astore def } B
/xs   { pop } XA XC
/xks  { /kern load OE } XA /kern XC
/xas  { pop ax ay rmoveto } XA /ay /ax XC
/xws  { c eq { cx cy rmoveto } if } XA /c /cy /cx XC
/xaws { ax ay rmoveto c eq { cx cy rmoveto } if }
    XA /ay /ax /c /cy /cx XC
/raws { xaws { awidthshow } Rif } B
/rws  { xws { widthshow } Rif } B
/rks  { xks { kshow } Rif } B
/ras  { xas { ashow } Rif } B
/rs   { xs { show } Rif } B
/rrs { getrepl dup 2 add -1 roll //restore exec setrepl } B
PSfragDict begin
islev2 not { /restore { /rrs PSfrag } B } if
/show       { /rs   PSfrag } B
/kshow      { /rks  PSfrag } B
/ashow      { /ras  PSfrag } B
/widthshow  { /rws  PSfrag } B
/awidthshow { /raws PSfrag } B
end PSfragDict RO pop
end

%%EndProcSet
%%BeginProcSet: 8r.enc
% @@psencodingfile@{
%   author = "S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry",
%   version = "0.6",
%   date = "1 July 1998",
%   filename = "8r.enc",
%   email = "tex-fonts@@tug.org",
%   docstring = "Encoding for TrueType or Type 1 fonts
%                to be used with TeX."
% @}
% 
% Idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard Encoding + ISO Latin 1 + extra characters from Lucida.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% 
% (4) Remaining positions left undefined are for use in (hopefully)
% upward-compatible revisions, if someday more characters are generally
% available.
% 
% (5) hyphen appears twice for compatibility with both 
% ASCII and Windows.
% 
/TeXBase1Encoding [
% 0x00 (encoded characters from Adobe Standard not in Windows 3.1)
  /.notdef /dotaccent /fi /fl
  /fraction /hungarumlaut /Lslash /lslash
  /ogonek /ring /.notdef
  /breve /minus /.notdef 
% These are the only two remaining unencoded characters, so may as
% well include them.
  /Zcaron /zcaron 
% 0x10
 /caron /dotlessi 
% (unusual TeX characters available in, e.g., Lucida Bright)
 /dotlessj /ff /ffi /ffl 
 /.notdef /.notdef /.notdef /.notdef
 /.notdef /.notdef /.notdef /.notdef
 % very contentious; it's so painful not having quoteleft and quoteright
 % at 96 and 145 that we move the things normally found there to here.
 /grave /quotesingle 
% 0x20 (ASCII begins)
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three /four /five /six /seven
 /eight /nine /colon /semicolon /less /equal /greater /question
% 0x40
 /at /A /B /C /D /E /F /G /H /I /J /K /L /M /N /O
% 0x50
 /P /Q /R /S /T /U /V /W
 /X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c /d /e /f /g /h /i /j /k /l /m /n /o
% 0x70
 /p /q /r /s /t /u /v /w
 /x /y /z /braceleft /bar /braceright /asciitilde
 /.notdef % rubout; ASCII ends
% 0x80
 /.notdef /.notdef /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /.notdef /.notdef /.notdef
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /.notdef /.notdef /Ydieresis
% 0xA0
 /.notdef % nobreakspace
 /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot
 /hyphen % Y&Y (also at 45); Windows' softhyphen
 /registered
 /macron
% 0xD0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def

%%EndProcSet
%%BeginProcSet: special.pro
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/copypage{}N/p 3 def @MacSetUp}N/doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N/endTexFig{end psf$SavedState restore}N/@beginspecial{SDict
begin/SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count/ocount X/dcount countdictstack N}N/@setspecial{
CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if/showpage{}N/erasepage{}N/copypage{}N newpath}N
/@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{end}
repeat grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
TeXDict begin 39158280 55380996 1000 600 600 (pic48.dvi)
@start
%DVIPSBitmapFont: Fa cmmi5 5 2
/Fa 2 102 df<0003B512F815FE3A003E001F80ED0FC0150715035B1507A2ED0F8049EB
1F00157E90B512F85D3901F001F8EC007E153E81485AA3151E4848133E5D5DEC07F0B612
C04AC7FC221C7C9B2B>66 D<137F3803FF80380781C0EA0E005A5A38780780387FFF00EA
FFF800F0C7FCA3127014406C13E0383C03C0380FFF00EA07F813127C911C>101
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fb cmmi7 7 3
/Fb 3 110 df<000FB712E05A9039800FE007D81E009038C001C05A0038011F13001230
00705C00601501023F148012E0481400A2C74890C7FCA2147EA214FEA25CA21301A25CA2
1303A25CA21307A25CA2130FA25CA2131F001FB57EA22B287DA727>84
D<B590B5EB3FFCA2D80FE0D90FE0EB07E0F003C019800007EF070003071406030F5CA203
1F5CA203375C03775C6D1367DBC7F05B1203DA0183495A02034AC7FC150302061406A202
0C5C021C5CEBF818000101306D5A030113700260146002E05C14C0D9F980EBF98016FBD9
FB0091C8FC01FE14FEA26C485C1500495C495CA2495C5E3E297BA73E>87
D<3B07801FC007E03B0FE07FF01FF83B18F0E0F8783C3B30F1807CE03E903AFB007D801E
D860FEEB3F005B49133E00C14A133E5B1201A24848495BA35F4848485A1830EE01F0A23C
0F8003E003E060A218C0933801E180271F0007C013E3933800FF00000E6D48137C341B7D
993B>109 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fc cmr7 7 7
/Fc 7 56 df<1238127C12FEA3127C123807077B8613>46 D<EB3F803801FFF03803E0F8
3807803C48487E001E7F003E1480A2003C1307007C14C0A400FC14E0AE007C14C0A36CEB
0F80A36CEB1F006C131E6C6C5A3803E0F86CB45A38003F801B277EA521>48
D<13381378EA01F8121F12FE12E01200B3AB487EB512F8A215267BA521>I<13FF000313
E0380E03F0381800F848137C48137E00787F12FC6CEB1F80A4127CC7FC15005C143E147E
147C5C495A495A5C495A010EC7FC5B5B903870018013E0EA0180390300030012065A001F
B5FC5A485BB5FCA219267DA521>I<13FF000313E0380F01F8381C007C0030137E003C13
3E007E133FA4123CC7123E147E147C5C495AEB07E03801FF8091C7FC380001E06D7E147C
80143F801580A21238127C12FEA21500485B0078133E00705B6C5B381F01F03807FFC0C6
90C7FC19277DA521>I<0018130C001F137CEBFFF85C5C1480D819FCC7FC0018C8FCA713
7F3819FFE0381F81F0381E0078001C7F0018133EC7FC80A21580A21230127C12FCA31500
12F00060133E127000305B001C5B380F03E03803FFC0C648C7FC19277DA521>53
D<1230123C003FB512E0A215C0481480A239700007000060130E140C48131C5C5CC75A5C
1301495AA249C7FC5B130E131EA3133E133CA2137CA413FCA813781B287DA621>55
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fd cmr10 10 14
/Fd 14 117 df<B712C016F816FE000190398001FF806C90C7EA3FC0EE0FE0EE07F0EE03
F817FC17FE1601A217FFA717FEA2EE03FCA2EE07F817F0EE0FE0EE3FC0923801FF0091B5
12FC16F091C9FCB3A5487FB6FCA330397DB839>80 D<D90FF813C090383FFE0190B51281
3903F807E33907E000F74848137F4848133F48C7121F003E140F007E1407A2007C140312
FC1501A36C1400A37E6D14006C7E7F13F86CB47E6C13F8ECFF806C14E06C14F86C14FEC6
80013F1480010714C0EB007F020713E0EC007FED3FF0151F150FED07F8A200C01403A215
01A37EA216F07E15036C15E06C14076C15C06C140F6DEB1F80D8FBF0EB3F00D8F0FE13FE
39E03FFFF8010F13E0D8C00190C7FC253D7CBA2E>83 D<EB1FE0EBFFFC3803E03F390700
0F80390F8007E0486C6C7E13E06E7EA26E7E6C5A6C5AC8FCA4147FEB07FFEB3FE0EBFE00
EA03F8EA0FF0EA1FC0123F485A90C7FC160C12FEA31401A26C13036CEB077C903980063E
18383FC01E3A0FE0781FF03A03FFF00FE03A007F8007C026277DA52A>97
D<EB03FC90381FFF8090387E03E03901F80070484813F83907E001FC380FC003A2EA1F80
123F90380001F848EB00F01500A2127E12FEAA127E127FA26C14067F001F140E6D130C00
0F141C6C6C13386C6C13706C6C13E039007C07C090381FFF00EB07F81F277DA525>99
D<EB07F8EB1FFF90387C0FC03901F803E03903F001F0D807E013F8380FC0004848137CA2
48C7127E153E5A153F127E12FEA3B7FCA248C8FCA5127EA2127FA26C14037F001F14076C
6C13060007140E6D131CD801F013386C6C137090387E03E090381FFF80903803FC002027
7EA525>101 D<147E903803FF8090380FC1E0EB1F8790383F0FF0137EA213FCA23901F8
03C091C7FCADB512FCA3D801F8C7FCB3AB487E387FFFF8A31C3B7FBA19>I<ED03F09039
0FF00FF890393FFC3C3C9039F81F707C3901F00FE03903E007C03A07C003E010000FECF0
00A248486C7EA86C6C485AA200075C6C6C485A6D485A6D48C7FC38073FFC38060FF0000E
C9FCA4120FA213C06CB512C015F86C14FE6CECFF804815C03A0F80007FE048C7EA0FF000
3E140348140116F8481400A56C1401007C15F06CEC03E0003F1407D80F80EB0F80D807E0
EB3F003901FC01FC39007FFFF0010790C7FC26387EA52A>I<EA03F012FFA3120F1203B3
B3AD487EB512C0A3123A7EB917>108 D<2703F00FF0EB1FE000FFD93FFCEB7FF8913AF0
3F01E07E903BF1C01F83803F3D0FF3800FC7001F802603F70013CE01FE14DC49D907F8EB
0FC0A2495CA3495CB3A3486C496CEB1FE0B500C1B50083B5FCA340257EA445>I<3903F0
0FF000FFEB3FFCECF03F9039F1C01F803A0FF3800FC03803F70013FE496D7EA25BA35BB3
A3486C497EB500C1B51280A329257EA42E>I<3903F01FE000FFEB7FF89038F1E07E9039
F3801F803A07F7000FC0D803FEEB07E049EB03F04914F849130116FC150016FEA3167FAA
16FEA3ED01FCA26DEB03F816F06D13076DEB0FE001F614C09039F7803F009038F1E07E90
38F0FFF8EC1FC091C8FCAB487EB512C0A328357EA42E>112 D<3807E01F00FFEB7FC090
38E1E3E09038E387F0380FE707EA03E613EE9038EC03E09038FC0080491300A45BB3A248
7EB512F0A31C257EA421>114 D<EBFF03000313E7380F80FF381E003F487F487F00707F
12F0A2807EA27EB490C7FCEA7FE013FF6C13E06C13F86C7F00037FC67F01071380EB007F
141F00C0EB0FC01407A26C1303A37E15806C13077EEC0F00B4131E38F3C07C38E1FFF038
C03F801A277DA521>I<1318A51338A31378A313F8120112031207001FB5FCB6FCA2D801
F8C7FCB215C0A93800FC011580EB7C03017E13006D5AEB0FFEEB01F81A347FB220>I
E
%EndDVIPSBitmapFont
end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%BeginPaperSize: a4
a4
%%EndPaperSize

%%EndSetup
%%Page: 1 1
1 0 bop 747 1907 a
 /PSfrag where{pop(1)[[0(Bl)1 0]](2)[[1(Bl)1 0]](1.75)[[2(Bl)1 0]](1.5)[[3(Bl)1
0]](1.25)[[4(Bl)1 0]](0.5)[[5(Bl)1 0]](0.75)[[6(Bl)1 0]](0.3)[[7(Bl)1
0]](0.25)[[8(Bl)1 0]](0.2)[[9(Bl)1 0]](0.15)[[10(Bl)1 0]](0.1)[[11(Bl)1
0]](0.05)[[12(Bl)1 0]](ql)[[13(Bl)1 0]](qp)[[14(Bl)1 0]]15 0 -1/Begin
PSfrag}{userdict /PSfrag{pop}put}ifelse
 747 1907 a @beginspecial 0 @llx 56
@lly 288 @urx 232 @ury 2880 @rwi @setspecial
%%BeginDocument: g04.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Mathematica-PSRender
%%BoundingBox: 0 56 288 232 
%%Pages: (atend)
%%DocumentNeededResources: (atend)
%%EndComments
%%BeginProlog
/setrgbcolor dup where
{ pop pop }
{ { .114 mul exch .587 mul add exch .299 mul add setgray } bind def }
ifelse
/C /curveto load def
/f /fill load def
/F { closepath fill } bind def
/L /lineto load def
/S /stroke load def
/s { closepath stroke } bind def
/d /setdash load def
/g /setgray load def
/m /moveto load def
/r /setrgbcolor load def
/w /setlinewidth load def
/b { gsave gsave F grestore 0 g S grestore newpath } bind def
/dot { newpath 0 360 arc fill } bind def
%%EndProlog
%%Page: 1 1 
0 g
0.25 w
1 setlinecap
1 setlinejoin
10. setmiterlimit
[ ] 0 d
83.7154 81.4702 m
83.7154 82.9397 L
S
71.7779 72.5937 m
%%IncludeResource: font Courier
/F0 /Courier findfont def
F0 10. scalefont setfont
(0.05) show
122.774 81.4702 m
122.774 82.9397 L
S
113.617 72.5937 m
(0.1) show
161.829 81.4702 m
161.829 82.9397 L
S
149.892 72.5937 m
(0.15) show
200.885 81.4702 m
200.885 82.9397 L
S
191.947 72.5937 m
(0.2) show
239.941 81.4702 m
239.941 82.9397 L
S
228.003 72.5937 m
(0.25) show
278.999 81.4702 m
278.999 82.9397 L
S
270.061 72.5937 m
(0.3) show
0.125 w
52.4704 81.4702 m
52.4704 82.3519 L
S
60.2834 81.4702 m
60.2834 82.3519 L
S
68.0941 81.4702 m
68.0941 82.3519 L
S
75.9047 81.4702 m
75.9047 82.3519 L
S
91.5285 81.4702 m
91.5285 82.3519 L
S
99.3391 81.4702 m
99.3391 82.3519 L
S
107.15 81.4702 m
107.15 82.3519 L
S
114.96 81.4702 m
114.96 82.3519 L
S
130.584 81.4702 m
130.584 82.3519 L
S
138.395 81.4702 m
138.395 82.3519 L
S
146.206 81.4702 m
146.206 82.3519 L
S
154.019 81.4702 m
154.019 82.3519 L
S
169.64 81.4702 m
169.64 82.3519 L
S
177.451 81.4702 m
177.451 82.3519 L
S
185.264 81.4702 m
185.264 82.3519 L
S
193.074 81.4702 m
193.074 82.3519 L
S
208.696 81.4702 m
208.696 82.3519 L
S
216.509 81.4702 m
216.509 82.3519 L
S
224.319 81.4702 m
224.319 82.3519 L
S
232.13 81.4702 m
232.13 82.3519 L
S
247.754 81.4702 m
247.754 82.3519 L
S
255.564 81.4702 m
255.564 82.3519 L
S
263.375 81.4702 m
263.375 82.3519 L
S
271.188 81.4702 m
271.188 82.3519 L
S
0.25 w
44.6597 81.4702 m
279.779 81.4702 L
S
156.095 60.4062 m
(qp) show
44.6597 99.6332 m
46.1292 99.6332 L
S
24.9082 96.7582 m
(0.25) show
44.6597 117.799 m
46.1292 117.799 L
S
28.9082 114.924 m
(0.5) show
44.6597 135.962 m
46.1292 135.962 L
S
24.9082 133.087 m
(0.75) show
44.6597 154.127 m
46.1292 154.127 L
S
36.4707 151.127 m
(1) show
44.6597 172.29 m
46.1292 172.29 L
S
24.9082 169.415 m
(1.25) show
44.6597 190.455 m
46.1292 190.455 L
S
28.9082 187.58 m
(1.5) show
44.6597 208.618 m
46.1292 208.618 L
S
24.9082 205.743 m
(1.75) show
44.6597 226.781 m
46.1292 226.781 L
S
36.9082 223.781 m
(2) show
0.125 w
44.6597 85.1028 m
45.5414 85.1028 L
S
44.6597 88.7354 m
45.5414 88.7354 L
S
44.6597 92.368 m
45.5414 92.368 L
S
44.6597 96.0006 m
45.5414 96.0006 L
S
44.6597 103.268 m
45.5414 103.268 L
S
44.6597 106.901 m
45.5414 106.901 L
S
44.6597 110.533 m
45.5414 110.533 L
S
44.6597 114.166 m
45.5414 114.166 L
S
44.6597 121.431 m
45.5414 121.431 L
S
44.6597 125.064 m
45.5414 125.064 L
S
44.6597 128.696 m
45.5414 128.696 L
S
44.6597 132.329 m
45.5414 132.329 L
S
44.6597 139.594 m
45.5414 139.594 L
S
44.6597 143.227 m
45.5414 143.227 L
S
44.6597 146.862 m
45.5414 146.862 L
S
44.6597 150.494 m
45.5414 150.494 L
S
44.6597 157.76 m
45.5414 157.76 L
S
44.6597 161.392 m
45.5414 161.392 L
S
44.6597 165.025 m
45.5414 165.025 L
S
44.6597 168.657 m
45.5414 168.657 L
S
44.6597 175.923 m
45.5414 175.923 L
S
44.6597 179.555 m
45.5414 179.555 L
S
44.6597 183.188 m
45.5414 183.188 L
S
44.6597 186.82 m
45.5414 186.82 L
S
44.6597 194.088 m
45.5414 194.088 L
S
44.6597 197.72 m
45.5414 197.72 L
S
44.6597 201.353 m
45.5414 201.353 L
S
44.6597 204.986 m
45.5414 204.986 L
S
44.6597 212.251 m
45.5414 212.251 L
S
44.6597 215.883 m
45.5414 215.883 L
S
44.6597 219.516 m
45.5414 219.516 L
S
44.6597 223.149 m
45.5414 223.149 L
S
0.25 w
44.6597 81.4702 m
44.6597 226.781 L
S
2.00119 151.408 m
(ql) show
44.6597 225.312 m
44.6597 226.781 L
S
83.7154 225.312 m
83.7154 226.781 L
S
122.774 225.312 m
122.774 226.781 L
S
161.829 225.312 m
161.829 226.781 L
S
200.885 225.312 m
200.885 226.781 L
S
239.941 225.312 m
239.941 226.781 L
S
278.999 225.312 m
278.999 226.781 L
S
0.125 w
52.4704 225.9 m
52.4704 226.781 L
S
60.2834 225.9 m
60.2834 226.781 L
S
68.0941 225.9 m
68.0941 226.781 L
S
75.9047 225.9 m
75.9047 226.781 L
S
91.5285 225.9 m
91.5285 226.781 L
S
99.3391 225.9 m
99.3391 226.781 L
S
107.15 225.9 m
107.15 226.781 L
S
114.96 225.9 m
114.96 226.781 L
S
130.584 225.9 m
130.584 226.781 L
S
138.395 225.9 m
138.395 226.781 L
S
146.206 225.9 m
146.206 226.781 L
S
154.019 225.9 m
154.019 226.781 L
S
169.64 225.9 m
169.64 226.781 L
S
177.451 225.9 m
177.451 226.781 L
S
185.264 225.9 m
185.264 226.781 L
S
193.074 225.9 m
193.074 226.781 L
S
208.696 225.9 m
208.696 226.781 L
S
216.509 225.9 m
216.509 226.781 L
S
224.319 225.9 m
224.319 226.781 L
S
232.13 225.9 m
232.13 226.781 L
S
247.754 225.9 m
247.754 226.781 L
S
255.564 225.9 m
255.564 226.781 L
S
263.375 225.9 m
263.375 226.781 L
S
271.188 225.9 m
271.188 226.781 L
S
0.25 w
44.6597 226.781 m
279.779 226.781 L
S
278.31 81.4702 m
279.779 81.4702 L
S
278.31 99.6332 m
279.779 99.6332 L
S
278.31 117.799 m
279.779 117.799 L
S
278.31 135.962 m
279.779 135.962 L
S
278.31 154.127 m
279.779 154.127 L
S
278.31 172.29 m
279.779 172.29 L
S
278.31 190.455 m
279.779 190.455 L
S
278.31 208.618 m
279.779 208.618 L
S
0.125 w
278.898 85.1028 m
279.779 85.1028 L
S
278.898 88.7354 m
279.779 88.7354 L
S
278.898 92.368 m
279.779 92.368 L
S
278.898 96.0006 m
279.779 96.0006 L
S
278.898 103.268 m
279.779 103.268 L
S
278.898 106.901 m
279.779 106.901 L
S
278.898 110.533 m
279.779 110.533 L
S
278.898 114.166 m
279.779 114.166 L
S
278.898 121.431 m
279.779 121.431 L
S
278.898 125.064 m
279.779 125.064 L
S
278.898 128.696 m
279.779 128.696 L
S
278.898 132.329 m
279.779 132.329 L
S
278.898 139.594 m
279.779 139.594 L
S
278.898 143.227 m
279.779 143.227 L
S
278.898 146.862 m
279.779 146.862 L
S
278.898 150.494 m
279.779 150.494 L
S
278.898 157.76 m
279.779 157.76 L
S
278.898 161.392 m
279.779 161.392 L
S
278.898 165.025 m
279.779 165.025 L
S
278.898 168.657 m
279.779 168.657 L
S
278.898 175.923 m
279.779 175.923 L
S
278.898 179.555 m
279.779 179.555 L
S
278.898 183.188 m
279.779 183.188 L
S
278.898 186.82 m
279.779 186.82 L
S
278.898 194.088 m
279.779 194.088 L
S
278.898 197.72 m
279.779 197.72 L
S
278.898 201.353 m
279.779 201.353 L
S
278.898 204.986 m
279.779 204.986 L
S
278.898 212.251 m
279.779 212.251 L
S
278.898 215.883 m
279.779 215.883 L
S
278.898 219.516 m
279.779 219.516 L
S
278.898 223.149 m
279.779 223.149 L
S
0.25 w
279.779 81.4702 m
279.779 226.781 L
S
gsave
44.6597 81.4702 m
279.779 81.4702 L
279.779 226.781 L
44.6597 226.781 L
44.6597 81.4702 L
closepath clip newpath
0.299 g
0.5 w
44.6597 154.2 m
46.1833 154.2 L
47.8432 154.2 L
49.402 154.2 L
50.9021 154.2 L
51.6733 154.2 L
51.8943 154.2 L
52.1059 154.2 L
52.294 154.2 L
52.3457 154.2 L
52.3998 154.2 L
52.4468 154.2 L
52.4986 154.155 L
52.548 154.141 L
52.5973 154.132 L
52.6491 154.122 L
52.6749 154.118 L
52.7031 154.115 L
52.7313 154.113 L
52.7549 154.11 L
52.8042 154.108 L
52.8513 154.108 L
52.8983 154.11 L
52.9406 154.113 L
52.9876 154.115 L
53.0323 154.12 L
53.0723 154.125 L
53.2627 154.155 L
53.6859 154.252 L
54.0856 154.348 L
54.2831 154.39 L
54.3278 154.4 L
54.3772 154.409 L
54.4195 154.418 L
54.4665 154.421 L
54.5582 154.426 L
54.6593 154.43 L
54.7675 154.435 L
54.8709 154.437 L
55.0543 154.442 L
55.2213 154.444 L
55.4 154.447 L
55.5975 154.451 L
55.6891 154.454 L
55.7385 154.454 L
55.7879 154.456 L
55.8138 154.456 L
55.842 154.458 L
55.8914 154.463 L
55.9901 154.473 L
S
55.9901 154.473 m
56.3522 154.508 L
57.1728 154.595 L
58.7763 154.759 L
59.5192 154.825 L
59.9072 154.856 L
60.1212 154.87 L
60.1752 154.875 L
60.2246 154.879 L
60.2716 154.882 L
60.321 154.882 L
60.3445 154.882 L
60.3727 154.882 L
60.4221 154.879 L
60.5303 154.879 L
60.7607 154.877 L
60.9535 154.875 L
61.0052 154.875 L
61.0616 154.872 L
61.1157 154.872 L
61.1651 154.872 L
61.2121 154.872 L
61.2615 154.872 L
61.2897 154.872 L
61.3179 154.872 L
61.3673 154.872 L
61.3932 154.872 L
61.4214 154.872 L
61.4707 154.872 L
61.4966 154.872 L
61.5225 154.872 L
61.5812 154.875 L
61.6753 154.875 L
61.7646 154.875 L
61.9598 154.879 L
62.1502 154.884 L
62.3501 154.891 L
62.7122 154.905 L
63.1001 154.929 L
63.5304 154.962 L
64.3557 155.042 L
65.1127 155.112 L
65.8534 155.213 L
66.6363 155.347 L
68.1364 155.683 L
69.7328 156.144 L
71.2705 156.647 L
72.9046 157.172 L
74.4799 157.708 L
75.9941 158.274 L
77.6047 158.933 L
S
77.6047 158.933 m
79.1564 159.619 L
80.6495 160.327 L
82.2365 161.122 L
83.7671 161.919 L
85.3918 162.791 L
86.9577 163.656 L
88.4625 164.505 L
90.066 165.429 L
91.6084 166.334 L
93.2472 167.315 L
94.8272 168.274 L
96.3484 169.21 L
97.9637 170.221 L
99.5202 171.206 L
101.018 172.163 L
102.612 173.195 L
104.147 174.197 L
105.777 175.271 L
107.347 176.318 L
108.859 177.331 L
110.467 178.417 L
112.014 179.468 L
113.503 180.486 L
115.09 181.575 L
116.613 182.63 L
118.236 183.757 L
119.799 184.843 L
121.302 185.889 L
122.9 187.006 L
124.441 188.083 L
126.077 189.228 L
127.652 190.328 L
129.169 191.389 L
130.782 192.51 L
132.336 193.587 L
133.831 194.617 L
135.421 195.705 L
136.951 196.745 L
138.578 197.843 L
140.146 198.887 L
141.654 199.876 L
143.259 200.918 L
144.804 201.906 L
146.445 202.933 L
148.028 203.899 L
149.549 204.812 L
151.169 205.759 L
152.728 206.641 L
154.225 207.461 L
155.822 208.301 L
S
155.822 208.301 m
157.357 209.086 L
158.991 209.881 L
160.564 210.607 L
162.078 211.263 L
163.687 211.915 L
165.238 212.5 L
166.729 213.029 L
168.316 213.537 L
169.842 213.972 L
171.467 214.369 L
173.03 214.687 L
174.535 214.929 L
175.377 215.046 L
176.136 215.138 L
176.931 215.216 L
177.288 215.244 L
177.679 215.267 L
178.064 215.286 L
178.274 215.293 L
178.469 215.3 L
178.565 215.3 L
178.654 215.303 L
178.734 215.305 L
178.821 215.305 L
178.866 215.305 L
178.915 215.305 L
178.96 215.307 L
179.002 215.307 L
179.049 215.307 L
179.096 215.307 L
179.146 215.307 L
179.169 215.307 L
179.198 215.305 L
179.249 215.305 L
179.296 215.305 L
179.322 215.305 L
179.35 215.305 L
179.379 215.303 L
179.407 215.303 L
179.602 215.296 L
179.971 215.279 L
180.796 215.227 L
182.325 215.108 L
183.952 214.969 L
185.518 214.783 L
187.025 214.555 L
188.628 214.247 L
190.171 213.864 L
191.812 213.354 L
193.392 212.756 L
S
193.392 212.756 m
194.913 212.082 L
196.531 211.252 L
198.087 210.344 L
199.585 209.38 L
201.181 208.237 L
202.717 207.017 L
204.346 205.588 L
205.919 204.073 L
207.431 202.46 L
209.039 200.558 L
210.588 198.534 L
212.077 196.528 L
213.664 194.335 L
215.19 192.165 L
216.812 189.797 L
218.376 187.472 L
219.88 185.2 L
221.479 182.753 L
223.019 180.373 L
224.656 177.827 L
226.233 175.363 L
227.752 172.988 L
229.365 170.461 L
230.919 168.032 L
232.415 165.702 L
234.006 163.233 L
235.537 160.872 L
237.166 158.38 L
238.735 156.001 L
240.242 153.765 L
241.848 151.489 L
243.395 149.213 L
244.881 146.923 L
246.463 144.355 L
247.984 141.738 L
249.604 138.783 L
251.165 135.825 L
252.663 132.806 L
254.262 129.289 L
255.797 125.539 L
257.431 120.796 L
259.004 115.896 L
260.518 110.964 L
262.131 105.561 L
263.681 100.28 L
265.171 95.1918 L
266.761 89.824 L
268.289 84.7595 L
S
268.289 84.7595 m
269.312 81.4702 L
S
44.6597 154.2 m
46.1833 154.2 L
47.8432 154.2 L
49.402 154.2 L
50.9021 154.2 L
52.4986 154.2 L
54.0339 154.2 L
55.668 154.2 L
57.2409 154.2 L
58.7551 154.2 L
60.3657 154.2 L
61.9175 154.2 L
63.4081 154.2 L
64.9952 154.2 L
66.5235 154.2 L
68.1481 154.2 L
69.714 154.2 L
71.2188 154.2 L
72.82 154.2 L
74.3624 154.2 L
76.0011 154.2 L
77.5788 154.2 L
79.0977 154.2 L
80.7153 154.2 L
81.5194 154.2 L
82.2718 154.2 L
82.9936 154.2 L
83.2005 154.2 L
83.398 154.2 L
83.5743 154.2 L
83.6237 154.2 L
83.6755 154.2 L
83.7178 154.209 L
83.7671 154.214 L
83.9599 154.23 L
84.1645 154.244 L
84.3385 154.252 L
84.5289 154.259 L
84.6371 154.263 L
84.7358 154.263 L
84.7899 154.266 L
84.8487 154.266 L
84.9004 154.266 L
84.9545 154.266 L
85.0062 154.268 L
85.0556 154.268 L
85.1073 154.268 L
85.1355 154.268 L
85.1614 154.268 L
85.2084 154.268 L
S
85.2084 154.268 m
85.2578 154.268 L
85.3072 154.268 L
85.3519 154.266 L
85.4553 154.266 L
85.5517 154.266 L
85.768 154.263 L
85.9561 154.261 L
86.0549 154.261 L
86.1607 154.261 L
86.2124 154.259 L
86.2594 154.259 L
86.3041 154.259 L
86.3464 154.259 L
86.3864 154.259 L
86.4287 154.259 L
86.471 154.259 L
86.518 154.259 L
86.5674 154.259 L
86.6121 154.259 L
86.6615 154.259 L
86.7132 154.259 L
86.8002 154.261 L
86.8966 154.261 L
86.9953 154.263 L
87.1035 154.266 L
87.301 154.27 L
87.4938 154.277 L
87.6701 154.287 L
87.8606 154.299 L
87.9711 154.306 L
88.0181 154.31 L
88.044 154.313 L
88.0722 154.315 L
88.1004 154.32 L
88.1263 154.324 L
88.178 154.334 L
88.2908 154.353 L
88.4954 154.39 L
89.9814 154.682 L
90.3529 154.75 L
90.4516 154.766 L
90.5551 154.783 L
90.6068 154.792 L
90.6538 154.795 L
90.7431 154.802 L
90.9477 154.813 L
91.1734 154.825 L
91.5661 154.844 L
92.2855 154.875 L
92.697 154.893 L
S
92.697 154.893 m
93.0802 154.912 L
93.273 154.926 L
93.3694 154.931 L
93.4564 154.938 L
93.5058 154.943 L
93.5575 154.95 L
93.668 154.964 L
93.8632 154.987 L
94.6908 155.11 L
96.3319 155.401 L
97.9096 155.756 L
99.4308 156.088 L
99.8376 156.165 L
100.216 156.231 L
100.315 156.248 L
100.409 156.264 L
100.458 156.271 L
100.489 156.274 L
100.515 156.274 L
100.613 156.281 L
101.046 156.299 L
101.784 156.325 L
102.596 156.346 L
103.357 156.372 L
103.788 156.393 L
104.18 156.415 L
104.368 156.426 L
104.568 156.44 L
104.665 156.448 L
104.712 156.452 L
104.756 156.457 L
104.796 156.464 L
104.839 156.473 L
104.928 156.49 L
105.744 156.659 L
107.237 156.993 L
108.826 157.343 L
109.56 157.489 L
109.663 157.508 L
109.715 157.52 L
109.76 157.527 L
109.788 157.529 L
109.814 157.531 L
109.872 157.538 L
109.974 157.548 L
110.357 157.586 L
111.194 157.656 L
111.986 157.715 L
113.484 157.816 L
114.321 157.875 L
S
114.321 157.875 m
115.08 157.929 L
115.459 157.957 L
115.87 157.999 L
116.616 158.1 L
118.226 158.328 L
119.778 158.547 L
121.266 158.752 L
122.096 158.86 L
122.856 158.954 L
124.382 159.086 L
125.948 159.21 L
127.45 159.323 L
129.054 159.445 L
130.594 159.563 L
132.232 159.706 L
133.81 159.869 L
135.329 160.024 L
136.944 160.186 L
138.501 160.339 L
139.996 160.482 L
141.588 160.63 L
143.121 160.769 L
144.75 160.915 L
146.321 161.044 L
147.83 161.159 L
149.438 161.27 L
150.986 161.364 L
152.471 161.444 L
154.056 161.514 L
154.783 161.543 L
155.197 161.557 L
155.58 161.571 L
155.961 161.583 L
156.071 161.585 L
156.125 161.587 L
156.175 161.587 L
156.219 161.59 L
156.269 161.594 L
156.316 161.604 L
156.37 161.613 L
157.2 161.761 L
158.03 161.886 L
158.789 161.973 L
159.165 162.008 L
159.574 162.039 L
159.763 162.05 L
159.96 162.062 L
160.134 162.069 L
160.32 162.076 L
160.421 162.079 L
S
160.421 162.079 m
160.531 162.081 L
160.578 162.081 L
160.632 162.081 L
160.68 162.083 L
160.727 162.083 L
160.752 162.083 L
160.783 162.083 L
160.811 162.083 L
160.844 162.083 L
160.87 162.083 L
160.901 162.083 L
160.929 162.083 L
160.955 162.083 L
161.004 162.083 L
161.032 162.083 L
161.058 162.083 L
161.11 162.083 L
161.164 162.081 L
161.267 162.081 L
161.378 162.079 L
161.58 162.072 L
161.778 162.062 L
161.959 162.053 L
162.342 162.027 L
162.699 161.996 L
163.515 161.895 L
163.924 161.829 L
164.314 161.757 L
164.665 161.686 L
164.761 161.665 L
164.785 161.658 L
164.813 161.651 L
164.862 161.634 L
164.949 161.592 L
165.046 161.547 L
166.666 160.663 L
168.225 159.633 L
169.725 158.502 L
171.321 157.165 L
172.859 155.766 L
174.493 154.181 L
176.066 152.573 L
177.58 150.962 L
179.19 149.196 L
180.742 147.452 L
182.233 145.745 L
183.82 143.906 L
185.348 142.119 L
186.975 140.217 L
188.539 138.419 L
S
188.539 138.419 m
190.044 136.681 L
191.647 134.831 L
193.19 133.048 L
194.828 131.16 L
196.408 129.348 L
197.927 127.612 L
199.542 125.776 L
201.099 124.022 L
202.597 122.362 L
204.188 120.606 L
205.724 118.932 L
207.353 117.168 L
208.924 115.485 L
210.436 113.881 L
212.041 112.193 L
213.591 110.583 L
215.077 109.05 L
216.662 107.434 L
218.187 105.897 L
219.81 104.279 L
221.371 102.739 L
222.873 101.274 L
224.472 99.732 L
226.01 98.2648 L
227.646 96.7248 L
229.222 95.2576 L
230.738 93.8634 L
232.351 92.3962 L
233.905 90.9996 L
235.398 89.6735 L
236.988 88.2793 L
238.518 86.9532 L
240.145 85.5589 L
241.711 84.2329 L
243.221 82.975 L
244.824 81.6489 L
S
244.824 81.6489 m
245.045 81.4702 L
S
0 g
[ 4.70239 2.3512 ] 0 d
44.6597 154.127 m
46.1833 154.127 L
47.8432 154.127 L
49.402 154.127 L
50.9021 154.127 L
52.4986 154.127 L
54.0339 154.127 L
55.668 154.127 L
57.2409 154.127 L
58.7551 154.127 L
60.3657 154.127 L
61.9175 154.127 L
63.4081 154.127 L
64.9952 154.127 L
66.5235 154.127 L
68.1481 154.127 L
69.714 154.127 L
71.2188 154.127 L
72.82 154.127 L
74.3624 154.127 L
76.0011 154.127 L
77.5788 154.127 L
79.0977 154.127 L
80.7153 154.127 L
82.2718 154.127 L
83.7671 154.127 L
85.3613 154.127 L
86.8942 154.127 L
88.5236 154.127 L
90.0942 154.127 L
91.6037 154.127 L
93.2119 154.127 L
94.759 154.127 L
96.2473 154.127 L
97.8297 154.127 L
99.3556 154.127 L
100.976 154.127 L
102.539 154.127 L
104.039 154.127 L
105.638 154.127 L
107.178 154.127 L
108.812 154.127 L
110.387 154.127 L
111.904 154.127 L
113.517 154.127 L
115.069 154.127 L
116.562 154.127 L
118.151 154.127 L
119.682 154.127 L
121.309 154.127 L
S
[ 4.70239 2.3512 ] 0.326 d
121.309 154.127 m
122.875 154.127 L
124.382 154.127 L
125.988 154.127 L
127.53 154.127 L
129.171 154.127 L
130.753 154.127 L
132.275 154.127 L
133.892 154.127 L
135.449 154.127 L
136.949 154.127 L
138.543 154.127 L
140.078 154.127 L
141.71 154.127 L
143.283 154.127 L
144.795 154.127 L
146.405 154.127 L
147.955 154.127 L
149.443 154.127 L
151.03 154.127 L
152.556 154.127 L
154.181 154.127 L
155.744 154.127 L
157.247 154.127 L
158.848 154.127 L
160.388 154.127 L
162.027 154.127 L
163.604 154.127 L
165.123 154.127 L
166.736 154.127 L
168.293 154.127 L
169.786 154.127 L
171.377 154.127 L
172.91 154.127 L
174.54 154.127 L
176.108 154.127 L
177.618 154.127 L
179.223 154.127 L
180.77 154.127 L
182.256 154.127 L
183.839 154.127 L
185.362 154.127 L
186.982 154.127 L
188.544 154.127 L
190.044 154.127 L
191.64 154.127 L
193.178 154.127 L
194.812 154.127 L
196.387 154.127 L
197.901 154.127 L
199.512 154.127 L
S
[ 4.70239 2.3512 ] 0.65861 d
199.512 154.127 m
201.064 154.127 L
202.554 154.127 L
204.144 154.127 L
205.672 154.127 L
207.297 154.127 L
208.863 154.127 L
210.37 154.127 L
211.971 154.127 L
213.516 154.127 L
215.154 154.127 L
216.734 154.127 L
218.253 154.127 L
219.871 154.127 L
221.427 154.127 L
222.925 154.127 L
224.519 154.127 L
226.052 154.127 L
227.684 154.127 L
229.255 154.127 L
230.766 154.127 L
232.375 154.127 L
233.922 154.127 L
235.41 154.127 L
236.995 154.127 L
238.521 154.127 L
240.143 154.127 L
241.704 154.127 L
243.209 154.127 L
244.808 154.127 L
246.345 154.127 L
247.982 154.127 L
249.559 154.127 L
251.076 154.127 L
252.689 154.127 L
254.243 154.127 L
255.736 154.127 L
257.328 154.127 L
258.858 154.127 L
260.485 154.127 L
262.054 154.127 L
263.561 154.127 L
265.164 154.127 L
266.711 154.127 L
268.353 154.127 L
269.933 154.127 L
271.456 154.127 L
273.074 154.127 L
274.633 154.127 L
276.133 154.127 L
277.729 154.127 L
S
[ 4.70239 2.3512 ] 0.99128 d
277.729 154.127 m
279.264 154.127 L
S
[ 4.70239 2.3512 ] 0 d
279.264 154.127 m
279.779 154.127 L
S
grestore
showpage
%%PageTrailer
%%Trailer
%%Pages: 1 
%%DocumentNeededResources: font Courier
%%EOF

%%EndDocument
 @endspecial 747 1907 a
 /End PSfrag
 747 1907 a 747 286 a
 /Hide PSfrag
 747 286
a 7 343 a Fd(PSfrag)26 b(replacemen)n(ts)p 7 373 741
4 v 747 376 a
 /Unhide PSfrag
 747 376 a 714 476 a
  {
 714 476 a Fc(1)714
476 y
  } 0/Place PSfrag
 714 476 a 714 575 a
  {
 714 575 a Fc(2)714 575 y
  } 1/Place PSfrag
 714
575 a 629 675 a
  {
 629 675 a Fc(1.75)629 675 y
  } 2/Place PSfrag
 629 675 a
662 775 a
  {
 662 775 a Fc(1.5)662 775 y
  } 3/Place PSfrag
 662 775 a 629 874
a
  {
 629 874 a Fc(1.25)629 874 y
  } 4/Place PSfrag
 629 874 a 662 974 a
  {
 662
974 a Fc(0.5)662 974 y
  } 5/Place PSfrag
 662 974 a 629 1074 a
  {
 629 1074
a Fc(0.75)629 1074 y
  } 6/Place PSfrag
 629 1074 a 662 1173 a
  {
 662 1173 a
Fc(0.3)662 1173 y
  } 7/Place PSfrag
 662 1173 a 629 1273 a
  {
 629 1273 a Fc(0.25)629
1273 y
  } 8/Place PSfrag
 629 1273 a 662 1372 a
  {
 662 1372 a Fc(0.2)662 1372
y
  } 9/Place PSfrag
 662 1372 a 629 1472 a
  {
 629 1472 a Fc(0.15)629 1472 y
  } 10/Place PSfrag

629 1472 a 662 1572 a
  {
 662 1572 a Fc(0.1)662 1572 y
  } 11/Place PSfrag
 662
1572 a 629 1671 a
  {
 629 1671 a Fc(0.05)629 1671 y
  } 12/Place PSfrag
 629 1671
a 615 1752 a
  {
 615 1752 a 645 1719 a Fb(W)p 625 1733 112
4 v 625 1781 a(W)687 1789 y Fa(B)615 1752 y
  } 13/Place PSfrag
 615 1752
a 636 1870 a
  {
 636 1870 a 667 1837 a Fb(T)p 646 1851 92
4 v 646 1898 a(m)705 1906 y Fa(e)636 1870 y
  } 14/Place PSfrag
 636 1870
a eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
